{
    "scope": "meta.class.state.body.lsl",
    "completions":
    [
        { "trigger": "at_rot_target\tevent", "contents": "at_rot_target(integer ${1:handle}, rotation ${2:targetrot}, rotation ${3:ourrot})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "at_target\tevent", "contents": "at_target(integer ${1:tnum}, vector ${2:targetpos}, vector ${3:ourpos})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "attach\tevent", "contents": "attach(key ${1:id})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "changed\tevent", "contents": "changed(integer ${1:change})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "collision\tevent", "contents": "collision(integer ${1:num_detected})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "collision_end\tevent", "contents": "collision_end(integer ${1:num_detected})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "collision_start\tevent", "contents": "collision_start(integer ${1:num_detected})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "control\tevent", "contents": "control(key ${1:id}, integer ${2:level}, integer ${3:edge})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "dataserver\tevent", "contents": "dataserver(key ${1:query_id}, string ${2:data})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "email\tevent", "contents": "email(string ${1:time}, string ${2:address}, string ${3:subject}, string ${4:message}, integer ${5:num_left})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "experience_permissions\tevent", "contents": "experience_permissions(key ${1:agent_id})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "experience_permissions_denied\tevent", "contents": "experience_permissions_denied(key ${1:agent_id}, integer ${2:reason})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "http_request\tevent", "contents": "http_request(key ${1:request_id}, string ${2:method}, string ${3:body})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "http_response\tevent", "contents": "http_response(key ${1:request_id}, integer ${2:status}, list ${3:metadata}, string ${4:body})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "land_collision\tevent", "contents": "land_collision(vector ${1:pos})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "land_collision_end\tevent", "contents": "land_collision_end(vector ${1:pos})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "land_collision_start\tevent", "contents": "land_collision_start(vector ${1:pos})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "link_message\tevent", "contents": "link_message(integer ${1:sender_num}, integer ${2:num}, string ${3:str}, key ${4:id})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "listen\tevent", "contents": "listen(integer ${1:channel}, string ${2:name}, key ${3:id}, string ${4:message})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "money\tevent", "contents": "money(key ${1:id}, integer ${2:amount})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "moving_end\tevent", "contents": "moving_end()${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "moving_start\tevent", "contents": "moving_start()${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "no_sensor\tevent", "contents": "no_sensor()${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "not_at_rot_target\tevent", "contents": "not_at_rot_target()${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "not_at_target\tevent", "contents": "not_at_target()${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "object_rez\tevent", "contents": "object_rez(key ${1:id})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "on_rez\tevent", "contents": "on_rez(integer ${1:start_param})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "path_update\tevent", "contents": "path_update(integer ${1:type}, list ${2:reserved})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "remote_data\tevent", "contents": "remote_data(integer ${1:event_type}, key ${2:channel}, key ${3:message_id}, string ${4:sender}, integer ${5:idata}, string ${6:sdata})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "run_time_permissions\tevent", "contents": "run_time_permissions(integer ${1:perm})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "sensor\tevent", "contents": "sensor(integer ${1:num_detected})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "state_entry\tevent", "contents": "state_entry()${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "state_exit\tevent", "contents": "state_exit()${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "timer\tevent", "contents": "timer()${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "touch\tevent", "contents": "touch(integer ${1:num_detected})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "touch_end\tevent", "contents": "touch_end(integer ${1:num_detected})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "touch_start\tevent", "contents": "touch_start(integer ${1:num_detected})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" },
        { "trigger": "transaction_result\tevent", "contents": "transaction_result(key ${1:id}, integer ${2:success}, string ${3:data})${LSL_SPACE_OR_NEWLINE}{\n\t$0\n}" }
    ]
}
