{
    "lsl": {
//  constants
        "ACTIVE": {
            "prefix": "ACTIVE\tint (0x2 = 2)",
            "body": "ACTIVE"
        },
        "AGENT": {
            "prefix": "AGENT\tint (0x1 = 1 = AGENT_BY_LEGACY_NAME)",
            "body": "AGENT"
        },
        "AGENT_ALWAYS_RUN": {
            "prefix": "AGENT_ALWAYS_RUN\tint (0x1000 = 4096)",
            "body": "AGENT_ALWAYS_RUN"
        },
        "AGENT_ATTACHMENTS": {
            "prefix": "AGENT_ATTACHMENTS\tint (0x2 = 2)",
            "body": "AGENT_ATTACHMENTS"
        },
        "AGENT_AUTOPILOT": {
            "prefix": "AGENT_AUTOPILOT\tint (0x2000 = 8192)",
            "body": "AGENT_AUTOPILOT"
        },
        "AGENT_AWAY": {
            "prefix": "AGENT_AWAY\tint (0x40 = 64)",
            "body": "AGENT_AWAY"
        },
        "AGENT_BUSY": {
            "prefix": "AGENT_BUSY\tint (0x800 = 2048)",
            "body": "AGENT_BUSY"
        },
        "AGENT_BY_LEGACY_NAME": {
            "prefix": "AGENT_BY_LEGACY_NAME\tint (0x1 = 1 = AGENT)",
            "body": "AGENT_BY_LEGACY_NAME"
        },
        "AGENT_BY_USERNAME": {
            "prefix": "AGENT_BY_USERNAME\tint (0x10 = 16)",
            "body": "AGENT_BY_USERNAME"
        },
        "AGENT_CROUCHING": {
            "prefix": "AGENT_CROUCHING\tint (0x400 = 1024)",
            "body": "AGENT_CROUCHING"
        },
        "AGENT_FLYING": {
            "prefix": "AGENT_FLYING\tint (0x1 = 1)",
            "body": "AGENT_FLYING"
        },
        "AGENT_IN_AIR": {
            "prefix": "AGENT_IN_AIR\tint (0x100 = 256)",
            "body": "AGENT_IN_AIR"
        },
        "AGENT_LIST_PARCEL": {
            "prefix": "AGENT_LIST_PARCEL\tint (1)",
            "body": "AGENT_LIST_PARCEL"
        },
        "AGENT_LIST_PARCEL_OWNER": {
            "prefix": "AGENT_LIST_PARCEL_OWNER\tint (2)",
            "body": "AGENT_LIST_PARCEL_OWNER"
        },
        "AGENT_LIST_REGION": {
            "prefix": "AGENT_LIST_REGION\tint (4)",
            "body": "AGENT_LIST_REGION"
        },
        "AGENT_MOUSELOOK": {
            "prefix": "AGENT_MOUSELOOK\tint (0x8 = 8)",
            "body": "AGENT_MOUSELOOK"
        },
        "AGENT_ON_OBJECT": {
            "prefix": "AGENT_ON_OBJECT\tint (0x20 = 32)",
            "body": "AGENT_ON_OBJECT"
        },
        "AGENT_SCRIPTED": {
            "prefix": "AGENT_SCRIPTED\tint (0x4 = 4)",
            "body": "AGENT_SCRIPTED"
        },
        "AGENT_SITTING": {
            "prefix": "AGENT_SITTING\tint (0x10 = 16)",
            "body": "AGENT_SITTING"
        },
        "AGENT_TYPING": {
            "prefix": "AGENT_TYPING\tint (0x200 = 512)",
            "body": "AGENT_TYPING"
        },
        "AGENT_WALKING": {
            "prefix": "AGENT_WALKING\tint (0x80 = 128)",
            "body": "AGENT_WALKING"
        },
        "ALL_SIDES": {
            "prefix": "ALL_SIDES\tint (-1)",
            "body": "ALL_SIDES"
        },
        "ANIM_ON": {
            "prefix": "ANIM_ON\tint (0x1 = 1)",
            "body": "ANIM_ON"
        },
        "ATTACH_AVATAR_CENTER": {
            "prefix": "ATTACH_AVATAR_CENTER\tint (40)",
            "body": "ATTACH_AVATAR_CENTER"
        },
        "ATTACH_BACK": {
            "prefix": "ATTACH_BACK\tint (9)",
            "body": "ATTACH_BACK"
        },
        "ATTACH_BELLY": {
            "prefix": "ATTACH_BELLY\tint (28)",
            "body": "ATTACH_BELLY"
        },
        "ATTACH_CHEST": {
            "prefix": "ATTACH_CHEST\tint (1)",
            "body": "ATTACH_CHEST"
        },
        "ATTACH_CHIN": {
            "prefix": "ATTACH_CHIN\tint (12)",
            "body": "ATTACH_CHIN"
        },
        "ATTACH_HEAD": {
            "prefix": "ATTACH_HEAD\tint (2)",
            "body": "ATTACH_HEAD"
        },
        "ATTACH_HUD_BOTTOM": {
            "prefix": "ATTACH_HUD_BOTTOM\tint (37)",
            "body": "ATTACH_HUD_BOTTOM"
        },
        "ATTACH_HUD_BOTTOM_LEFT": {
            "prefix": "ATTACH_HUD_BOTTOM_LEFT\tint (36)",
            "body": "ATTACH_HUD_BOTTOM_LEFT"
        },
        "ATTACH_HUD_BOTTOM_RIGHT": {
            "prefix": "ATTACH_HUD_BOTTOM_RIGHT\tint (38)",
            "body": "ATTACH_HUD_BOTTOM_RIGHT"
        },
        "ATTACH_HUD_CENTER_1": {
            "prefix": "ATTACH_HUD_CENTER_1\tint (35)",
            "body": "ATTACH_HUD_CENTER_1"
        },
        "ATTACH_HUD_CENTER_2": {
            "prefix": "ATTACH_HUD_CENTER_2\tint (31)",
            "body": "ATTACH_HUD_CENTER_2"
        },
        "ATTACH_HUD_TOP_CENTER": {
            "prefix": "ATTACH_HUD_TOP_CENTER\tint (33)",
            "body": "ATTACH_HUD_TOP_CENTER"
        },
        "ATTACH_HUD_TOP_LEFT": {
            "prefix": "ATTACH_HUD_TOP_LEFT\tint (36)",
            "body": "ATTACH_HUD_TOP_LEFT"
        },
        "ATTACH_HUD_TOP_RIGHT": {
            "prefix": "ATTACH_HUD_TOP_RIGHT\tint (32)",
            "body": "ATTACH_HUD_TOP_RIGHT"
        },
        "ATTACH_LEAR": {
            "prefix": "ATTACH_LEAR\tint (13)",
            "body": "ATTACH_LEAR"
        },
        "ATTACH_LEFT_PEC": {
            "prefix": "ATTACH_LEFT_PEC\tint (29)",
            "body": "ATTACH_LEFT_PEC"
        },
        "ATTACH_LEYE": {
            "prefix": "ATTACH_LEYE\tint (15)",
            "body": "ATTACH_LEYE"
        },
        "ATTACH_LFOOT": {
            "prefix": "ATTACH_LFOOT\tint (7)",
            "body": "ATTACH_LFOOT"
        },
        "ATTACH_LHAND": {
            "prefix": "ATTACH_LHAND\tint (5)",
            "body": "ATTACH_LHAND"
        },
        "ATTACH_LHIP": {
            "prefix": "ATTACH_LHIP\tint (25)",
            "body": "ATTACH_LHIP"
        },
        "ATTACH_LLARM": {
            "prefix": "ATTACH_LLARM\tint (21)",
            "body": "ATTACH_LLARM"
        },
        "ATTACH_LLLEG": {
            "prefix": "ATTACH_LLLEG\tint (27)",
            "body": "ATTACH_LLLEG"
        },
        "ATTACH_LSHOULDER": {
            "prefix": "ATTACH_LSHOULDER\tint (3)",
            "body": "ATTACH_LSHOULDER"
        },
        "ATTACH_LUARM": {
            "prefix": "ATTACH_LUARM\tint (20)",
            "body": "ATTACH_LUARM"
        },
        "ATTACH_LULEG": {
            "prefix": "ATTACH_LULEG\tint (26)",
            "body": "ATTACH_LULEG"
        },
        "ATTACH_MOUTH": {
            "prefix": "ATTACH_MOUTH\tint (11)",
            "body": "ATTACH_MOUTH"
        },
        "ATTACH_NECK": {
            "prefix": "ATTACH_NECK\tint (39)",
            "body": "ATTACH_NECK"
        },
        "ATTACH_NOSE": {
            "prefix": "ATTACH_NOSE\tint (17)",
            "body": "ATTACH_NOSE"
        },
        "ATTACH_PELVIS": {
            "prefix": "ATTACH_PELVIS\tint (10)",
            "body": "ATTACH_PELVIS"
        },
        "ATTACH_REAR": {
            "prefix": "ATTACH_REAR\tint (14)",
            "body": "ATTACH_REAR"
        },
        "ATTACH_REYE": {
            "prefix": "ATTACH_REYE\tint (16)",
            "body": "ATTACH_REYE"
        },
        "ATTACH_RFOOT": {
            "prefix": "ATTACH_RFOOT\tint (8)",
            "body": "ATTACH_RFOOT"
        },
        "ATTACH_RHAND": {
            "prefix": "ATTACH_RHAND\tint (6)",
            "body": "ATTACH_RHAND"
        },
        "ATTACH_RHIP": {
            "prefix": "ATTACH_RHIP\tint (22)",
            "body": "ATTACH_RHIP"
        },
        "ATTACH_RIGHT_PEC": {
            "prefix": "ATTACH_RIGHT_PEC\tint (30)",
            "body": "ATTACH_RIGHT_PEC"
        },
        "ATTACH_RLARM": {
            "prefix": "ATTACH_RLARM\tint (19)",
            "body": "ATTACH_RLARM"
        },
        "ATTACH_RLLEG": {
            "prefix": "ATTACH_RLLEG\tint (24)",
            "body": "ATTACH_RLLEG"
        },
        "ATTACH_RSHOULDER": {
            "prefix": "ATTACH_RSHOULDER\tint (4)",
            "body": "ATTACH_RSHOULDER"
        },
        "ATTACH_RUARM": {
            "prefix": "ATTACH_RUARM\tint (18)",
            "body": "ATTACH_RUARM"
        },
        "ATTACH_RULEG": {
            "prefix": "ATTACH_RULEG\tint (23)",
            "body": "ATTACH_RULEG"
        },
        "AVOID_CHARACTERS": {
            "prefix": "AVOID_CHARACTERS\tint (1)",
            "body": "AVOID_CHARACTERS"
        },
        "AVOID_DYNAMIC_OBSTACLES": {
            "prefix": "AVOID_DYNAMIC_OBSTACLES\tint (2)",
            "body": "AVOID_DYNAMIC_OBSTACLES"
        },
        "AVOID_NONE": {
            "prefix": "AVOID_NONE\tint (0)",
            "body": "AVOID_NONE"
        },
        "CAMERA_ACTIVE": {
            "prefix": "CAMERA_ACTIVE\tint (12)",
            "body": "CAMERA_ACTIVE, ${integer isActive}, $0"
        },
        "CAMERA_BEHINDNESS_ANGLE": {
            "prefix": "CAMERA_BEHINDNESS_ANGLE\tint (8)",
            "body": "CAMERA_BEHINDNESS_ANGLE, ${float degrees}, $0"
        },
        "CAMERA_BEHINDNESS_LAG": {
            "prefix": "CAMERA_BEHINDNESS_LAG\tint (9)",
            "body": "CAMERA_BEHINDNESS_LAG, ${float seconds}, $0"
        },
        "CAMERA_DISTANCE": {
            "prefix": "CAMERA_DISTANCE\tint (7)",
            "body": "CAMERA_DISTANCE, ${float meters}, $0"
        },
        "CAMERA_FOCUS": {
            "prefix": "CAMERA_FOCUS\tint (17)",
            "body": "CAMERA_FOCUS, ${vector position}, $0"
        },
        "CAMERA_FOCUS_LAG": {
            "prefix": "CAMERA_FOCUS_LAG\tint (6)",
            "body": "CAMERA_FOCUS_LAG, ${float seconds}, $0"
        },
        "CAMERA_FOCUS_LOCKED": {
            "prefix": "CAMERA_FOCUS_LOCKED\tint (22)",
            "body": "CAMERA_FOCUS_LOCKED, ${integer isLocked}, $0"
        },
        "CAMERA_FOCUS_OFFSET": {
            "prefix": "CAMERA_FOCUS_OFFSET\tint (1)",
            "body": "CAMERA_FOCUS_OFFSET, ${vector meters}, $0"
        },
        "CAMERA_FOCUS_THRESHOLD": {
            "prefix": "CAMERA_FOCUS_THRESHOLD\tint (11)",
            "body": "CAMERA_FOCUS_THRESHOLD, ${float meters}, $0"
        },
        "CAMERA_PITCH": {
            "prefix": "CAMERA_PITCH\tint (0)",
            "body": "CAMERA_PITCH, ${float degrees}, $0"
        },
        "CAMERA_POSITION": {
            "prefix": "CAMERA_POSITION\tint (13)",
            "body": "CAMERA_POSITION, ${vector position}, $0"
        },
        "CAMERA_POSITION_LAG": {
            "prefix": "CAMERA_POSITION_LAG\tint (5)",
            "body": "CAMERA_POSITION_LAG, ${float seconds}, $0"
        },
        "CAMERA_POSITION_LOCKED": {
            "prefix": "CAMERA_POSITION_LOCKED\tint (21)",
            "body": "CAMERA_POSITION_LOCKED, ${integer isLocked}, $0"
        },
        "CAMERA_POSITION_THRESHOLD": {
            "prefix": "CAMERA_POSITION_THRESHOLD\tint (10)",
            "body": "CAMERA_POSITION_THRESHOLD, ${float meters}, $0"
        },
        "CHANGED_ALLOWED_DROP": {
            "prefix": "CHANGED_ALLOWED_DROP\tint (0x40 = 64)",
            "body": "CHANGED_ALLOWED_DROP"
        },
        "CHANGED_COLOR": {
            "prefix": "CHANGED_COLOR\tint (0x2 = 2)",
            "body": "CHANGED_COLOR"
        },
        "CHANGED_INVENTORY": {
            "prefix": "CHANGED_INVENTORY\tint (0x1 = 1)",
            "body": "CHANGED_INVENTORY"
        },
        "CHANGED_LINK": {
            "prefix": "CHANGED_LINK\tint (0x20 = 32)",
            "body": "CHANGED_LINK"
        },
        "CHANGED_MEDIA": {
            "prefix": "CHANGED_MEDIA\tint (0x800 = 2048)",
            "body": "CHANGED_MEDIA"
        },
        "CHANGED_OWNER": {
            "prefix": "CHANGED_OWNER\tint (0x80 = 128)",
            "body": "CHANGED_OWNER"
        },
        "CHANGED_REGION": {
            "prefix": "CHANGED_REGION\tint (0x100 = 256)",
            "body": "CHANGED_REGION"
        },
        "CHANGED_REGION_START": {
            "prefix": "CHANGED_REGION_START\tint (0x400 = 1024)",
            "body": "CHANGED_REGION_START"
        },
        "CHANGED_SCALE": {
            "prefix": "CHANGED_SCALE\tint (0x8 = 8)",
            "body": "CHANGED_SCALE"
        },
        "CHANGED_SHAPE": {
            "prefix": "CHANGED_SHAPE\tint (0x4 = 4)",
            "body": "CHANGED_SHAPE"
        },
        "CHANGED_TELEPORT": {
            "prefix": "CHANGED_TELEPORT\tint (0x200 = 512)",
            "body": "CHANGED_TELEPORT"
        },
        "CHANGED_TEXTURE": {
            "prefix": "CHANGED_TEXTURE\tint (0x10 = 16)",
            "body": "CHANGED_TEXTURE"
        },
        "CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES": {
            "prefix": "CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES\tint (14)",
            "body": "CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES"
        },
        "CHARACTER_AVOIDANCE_MODE": {
            "prefix": "CHARACTER_AVOIDANCE_MODE\tint (5)",
            "body": "CHARACTER_AVOIDANCE_MODE, ${integer flags}, $0"
        },
        "CHARACTER_CMD_JUMP": {
            "prefix": "CHARACTER_CMD_JUMP\tint (1)",
            "body": "CHARACTER_CMD_JUMP"
        },
        "CHARACTER_CMD_SMOOTH_STOP": {
            "prefix": "CHARACTER_CMD_SMOOTH_STOP\tint (2)",
            "body": "CHARACTER_CMD_SMOOTH_STOP"
        },
        "CHARACTER_CMD_STOP": {
            "prefix": "CHARACTER_CMD_STOP\tint (0)",
            "body": "CHARACTER_CMD_STOP"
        },
        "CHARACTER_DESIRED_SPEED": {
            "prefix": "CHARACTER_DESIRED_SPEED\tint (1)",
            "body": "CHARACTER_DESIRED_SPEED, ${float speed}, $0"
        },
        "CHARACTER_DESIRED_TURN_SPEED": {
            "prefix": "CHARACTER_DESIRED_TURN_SPEED\tint (12)",
            "body": "CHARACTER_DESIRED_TURN_SPEED, ${float speed}, $0"
        },
        "CHARACTER_LENGTH": {
            "prefix": "CHARACTER_LENGTH\tint (3)",
            "body": "CHARACTER_LENGTH, ${float length}, $0"
        },
        "CHARACTER_MAX_ACCEL": {
            "prefix": "CHARACTER_MAX_ACCEL\tint (8)",
            "body": "CHARACTER_MAX_ACCEL"
        },
        "CHARACTER_MAX_DECEL": {
            "prefix": "CHARACTER_MAX_DECEL\tint (9)",
            "body": "CHARACTER_MAX_DECEL"
        },
        "CHARACTER_MAX_SPEED": {
            "prefix": "CHARACTER_MAX_SPEED\tint (13)",
            "body": "CHARACTER_MAX_SPEED"
        },
        "CHARACTER_MAX_TURN_RADIUS": {
            "prefix": "CHARACTER_MAX_TURN_RADIUS\tint (10)",
            "body": "CHARACTER_MAX_TURN_RADIUS, ${float radius}, $0"
        },
        "CHARACTER_ORIENTATION": {
            "prefix": "CHARACTER_ORIENTATION\tint (4)",
            "body": "CHARACTER_ORIENTATION, ${integer orientation}, $0"
        },
        "CHARACTER_RADIUS": {
            "prefix": "CHARACTER_RADIUS\tint (2)",
            "body": "CHARACTER_RADIUS, ${float radius}, $0"
        },
        "CHARACTER_STAY_WITHIN_PARCEL": {
            "prefix": "CHARACTER_STAY_WITHIN_PARCEL\tint (15)",
            "body": "CHARACTER_STAY_WITHIN_PARCEL, ${ boolean stay}, $0"
        },
        "CHARACTER_TYPE": {
            "prefix": "CHARACTER_TYPE\tint (6)",
            "body": "CHARACTER_TYPE, ${integer type}, $0"
        },
        "CHARACTER_TYPE_A": {
            "prefix": "CHARACTER_TYPE_A\tint (0)",
            "body": "CHARACTER_TYPE_A"
        },
        "CHARACTER_TYPE_B": {
            "prefix": "CHARACTER_TYPE_B\tint (1)",
            "body": "CHARACTER_TYPE_B"
        },
        "CHARACTER_TYPE_C": {
            "prefix": "CHARACTER_TYPE_C\tint (2)",
            "body": "CHARACTER_TYPE_C"
        },
        "CHARACTER_TYPE_D": {
            "prefix": "CHARACTER_TYPE_D\tint (3)",
            "body": "CHARACTER_TYPE_D"
        },
        "CHARACTER_TYPE_NONE": {
            "prefix": "CHARACTER_TYPE_NONE\tint (4)",
            "body": "CHARACTER_TYPE_NONE"
        },
        "CLICK_ACTION_BUY": {
            "prefix": "CLICK_ACTION_BUY\tint (2)",
            "body": "CLICK_ACTION_BUY"
        },
        "CLICK_ACTION_NONE": {
            "prefix": "CLICK_ACTION_NONE\tint (0)",
            "body": "CLICK_ACTION_NONE"
        },
        "CLICK_ACTION_OPEN": {
            "prefix": "CLICK_ACTION_OPEN\tint (4)",
            "body": "CLICK_ACTION_OPEN"
        },
        "CLICK_ACTION_OPEN_MEDIA": {
            "prefix": "CLICK_ACTION_OPEN_MEDIA\tint (6)",
            "body": "CLICK_ACTION_OPEN_MEDIA"
        },
        "CLICK_ACTION_PAY": {
            "prefix": "CLICK_ACTION_PAY\tint (3)",
            "body": "CLICK_ACTION_PAY"
        },
        "CLICK_ACTION_PLAY": {
            "prefix": "CLICK_ACTION_PLAY\tint (5)",
            "body": "CLICK_ACTION_PLAY"
        },
        "CLICK_ACTION_SIT": {
            "prefix": "CLICK_ACTION_SIT\tint (1)",
            "body": "CLICK_ACTION_SIT"
        },
        "CLICK_ACTION_TOUCH": {
            "prefix": "CLICK_ACTION_TOUCH\tint (0)",
            "body": "CLICK_ACTION_TOUCH"
        },
        "CONTENT_TYPE_ATOM": {
            "prefix": "CONTENT_TYPE_ATOM\tint (4)",
            "body": "CONTENT_TYPE_ATOM"
        },
        "CONTENT_TYPE_FORM": {
            "prefix": "CONTENT_TYPE_FORM\tint (7)",
            "body": "CONTENT_TYPE_FORM"
        },
        "CONTENT_TYPE_HTML": {
            "prefix": "CONTENT_TYPE_HTML\tint (1)",
            "body": "CONTENT_TYPE_HTML"
        },
        "CONTENT_TYPE_JSON": {
            "prefix": "CONTENT_TYPE_JSON\tint (5)",
            "body": "CONTENT_TYPE_JSON"
        },
        "CONTENT_TYPE_LLSD": {
            "prefix": "CONTENT_TYPE_LLSD\tint (6)",
            "body": "CONTENT_TYPE_LLSD"
        },
        "CONTENT_TYPE_RSS": {
            "prefix": "CONTENT_TYPE_RSS\tint (8)",
            "body": "CONTENT_TYPE_RSS"
        },
        "CONTENT_TYPE_TEXT": {
            "prefix": "CONTENT_TYPE_TEXT\tint (0)",
            "body": "CONTENT_TYPE_TEXT"
        },
        "CONTENT_TYPE_XHTML": {
            "prefix": "CONTENT_TYPE_XHTML\tint (3)",
            "body": "CONTENT_TYPE_XHTML"
        },
        "CONTENT_TYPE_XML": {
            "prefix": "CONTENT_TYPE_XML\tint (2)",
            "body": "CONTENT_TYPE_XML"
        },
        "CONTROL_BACK": {
            "prefix": "CONTROL_BACK\tint (0x2 = 2)",
            "body": "CONTROL_BACK"
        },
        "CONTROL_DOWN": {
            "prefix": "CONTROL_DOWN\tint (0x20 = 32)",
            "body": "CONTROL_DOWN"
        },
        "CONTROL_FWD": {
            "prefix": "CONTROL_FWD\tint (0x1 = 1)",
            "body": "CONTROL_FWD"
        },
        "CONTROL_LBUTTON": {
            "prefix": "CONTROL_LBUTTON\tint (0x10000000 = 268435456)",
            "body": "CONTROL_LBUTTON"
        },
        "CONTROL_LEFT": {
            "prefix": "CONTROL_LEFT\tint (0x4 = 4)",
            "body": "CONTROL_LEFT"
        },
        "CONTROL_ML_LBUTTON": {
            "prefix": "CONTROL_ML_LBUTTON\tint (0x40000000 = 1073741824)",
            "body": "CONTROL_ML_LBUTTON"
        },
        "CONTROL_RIGHT": {
            "prefix": "CONTROL_RIGHT\tint (0x8 = 8)",
            "body": "CONTROL_RIGHT"
        },
        "CONTROL_ROT_LEFT": {
            "prefix": "CONTROL_ROT_LEFT\tint (0x100 = 256)",
            "body": "CONTROL_ROT_LEFT"
        },
        "CONTROL_ROT_RIGHT": {
            "prefix": "CONTROL_ROT_RIGHT\tint (0x200 = 512)",
            "body": "CONTROL_ROT_RIGHT"
        },
        "CONTROL_UP": {
            "prefix": "CONTROL_UP\tint (0x10 = 16)",
            "body": "CONTROL_UP"
        },
        "DATA_BORN": {
            "prefix": "DATA_BORN\tint (3)",
            "body": "DATA_BORN"
        },
        "DATA_NAME": {
            "prefix": "DATA_NAME\tint (2)",
            "body": "DATA_NAME"
        },
        "DATA_ONLINE": {
            "prefix": "DATA_ONLINE\tint (1)",
            "body": "DATA_ONLINE"
        },
        "DATA_PAYINFO": {
            "prefix": "DATA_PAYINFO\tint (8)",
            "body": "DATA_PAYINFO"
        },
        "DATA_SIM_POS": {
            "prefix": "DATA_SIM_POS\tint (5)",
            "body": "DATA_SIM_POS"
        },
        "DATA_SIM_RATING": {
            "prefix": "DATA_SIM_RATING\tint (7)",
            "body": "DATA_SIM_RATING"
        },
        "DATA_SIM_STATUS": {
            "prefix": "DATA_SIM_STATUS\tint (6)",
            "body": "DATA_SIM_STATUS"
        },
        "DEBUG_CHANNEL": {
            "prefix": "DEBUG_CHANNEL\tint (0x7FFFFFFF = 2147483647)",
            "body": "DEBUG_CHANNEL"
        },
        "DEG_TO_RAD": {
            "prefix": "DEG_TO_RAD\tfloat (0.017453)",
            "body": "DEG_TO_RAD"
        },
        "DENSITY": {
            "prefix": "DENSITY\tint (0x1 = 1)",
            "body": "DENSITY"
        },
        "EOF": {
            "prefix": "EOF\tstr (\"\\n\\n\\n\")",
            "body": "EOF"
        },
        "ERR_GENERIC": {
            "prefix": "ERR_GENERIC\tint (-1)",
            "body": "ERR_GENERIC"
        },
        "ERR_MALFORMED_PARAMS": {
            "prefix": "ERR_MALFORMED_PARAMS\tint (-3)",
            "body": "ERR_MALFORMED_PARAMS"
        },
        "ERR_PARCEL_PERMISSIONS": {
            "prefix": "ERR_PARCEL_PERMISSIONS\tint (-2)",
            "body": "ERR_PARCEL_PERMISSIONS"
        },
        "ERR_RUNTIME_PERMISSIONS": {
            "prefix": "ERR_RUNTIME_PERMISSIONS\tint (-4)",
            "body": "ERR_RUNTIME_PERMISSIONS"
        },
        "ERR_THROTTLED": {
            "prefix": "ERR_THROTTLED\tint (-5)",
            "body": "ERR_THROTTLED"
        },
        "ESTATE_ACCESS_ALLOWED_AGENT_ADD": {
            "prefix": "ESTATE_ACCESS_ALLOWED_AGENT_ADD\tint (0x4 = 4)",
            "body": "ESTATE_ACCESS_ALLOWED_AGENT_ADD"
        },
        "ESTATE_ACCESS_ALLOWED_AGENT_REMOVE": {
            "prefix": "ESTATE_ACCESS_ALLOWED_AGENT_REMOVE\tint (0x8 = 8)",
            "body": "ESTATE_ACCESS_ALLOWED_AGENT_REMOVE"
        },
        "ESTATE_ACCESS_ALLOWED_GROUP_ADD": {
            "prefix": "ESTATE_ACCESS_ALLOWED_GROUP_ADD\tint (0x10 = 16)",
            "body": "ESTATE_ACCESS_ALLOWED_GROUP_ADD"
        },
        "ESTATE_ACCESS_ALLOWED_GROUP_REMOVE": {
            "prefix": "ESTATE_ACCESS_ALLOWED_GROUP_REMOVE\tint (0x20 = 32)",
            "body": "ESTATE_ACCESS_ALLOWED_GROUP_REMOVE"
        },
        "ESTATE_ACCESS_BANNED_AGENT_ADD": {
            "prefix": "ESTATE_ACCESS_BANNED_AGENT_ADD\tint (0x40 = 64)",
            "body": "ESTATE_ACCESS_BANNED_AGENT_ADD"
        },
        "ESTATE_ACCESS_BANNED_AGENT_REMOVE": {
            "prefix": "ESTATE_ACCESS_BANNED_AGENT_REMOVE\tint (0x80 = 128)",
            "body": "ESTATE_ACCESS_BANNED_AGENT_REMOVE"
        },
        "FALSE": {
            "prefix": "FALSE\tint bool (0)",
            "body": "FALSE"
        },
        "FORCE_DIRECT_PATH": {
            "prefix": "FORCE_DIRECT_PATH\tint (1)",
            "body": "FORCE_DIRECT_PATH"
        },
        "FRICTION": {
            "prefix": "FRICTION\tint (0x2 = 2)",
            "body": "FRICTION"
        },
        "GCNP_RADIUS": {
            "prefix": "GCNP_RADIUS\tint (0)",
            "body": "GCNP_RADIUS"
        },
        "GCNP_STATIC": {
            "prefix": "GCNP_STATIC\tint (1)",
            "body": "GCNP_STATIC"
        },
        "GRAVITY_MULTIPLIER": {
            "prefix": "GRAVITY_MULTIPLIER\tint (0x8 = 8)",
            "body": "GRAVITY_MULTIPLIER"
        },
        "HORIZONTAL": {
            "prefix": "HORIZONTAL\tint (1)",
            "body": "HORIZONTAL"
        },
        "HTTP_BODY_MAXLENGTH": {
            "prefix": "HTTP_BODY_MAXLENGTH\tint (2)",
            "body": "HTTP_BODY_MAXLENGTH, ${integer length}, $0"
        },
        "HTTP_BODY_TRUNCATED": {
            "prefix": "HTTP_BODY_TRUNCATED\tint (0)",
            "body": "HTTP_BODY_TRUNCATED"
        },
        "HTTP_CUSTOM_HEADER": {
            "prefix": "HTTP_CUSTOM_HEADER\tint (0)",
            "body": "HTTP_CUSTOM_HEADER, ${string name}, ${string value}, $0"
        },
        "HTTP_METHOD": {
            "prefix": "HTTP_METHOD\tint (0)",
            "body": "HTTP_METHOD, ${string method}, $0"
        },
        "HTTP_MIMETYPE": {
            "prefix": "HTTP_MIMETYPE\tint (1)",
            "body": "HTTP_MIMETYPE, ${string mimeType}, $0"
        },
        "HTTP_PRAGMA_NO_CACHE": {
            "prefix": "HTTP_PRAGMA_NO_CACHE\tint (6)",
            "body": "HTTP_PRAGMA_NO_CACHE, ${integer send_header}, $0"
        },
        "HTTP_VERBOSE_THROTTLE": {
            "prefix": "HTTP_VERBOSE_THROTTLE\tint (4)",
            "body": "HTTP_VERBOSE_THROTTLE, ${integer noisy}, $0"
        },
        "HTTP_VERIFY_CERT": {
            "prefix": "HTTP_VERIFY_CERT\tint (3)",
            "body": "HTTP_VERIFY_CERT, ${integer verify}, $0"
        },
        "INVENTORY_ALL": {
            "prefix": "INVENTORY_ALL\tint (-1)",
            "body": "INVENTORY_ALL"
        },
        "INVENTORY_ANIMATION": {
            "prefix": "INVENTORY_ANIMATION\tint (20)",
            "body": "INVENTORY_ANIMATION"
        },
        "INVENTORY_BODYPART": {
            "prefix": "INVENTORY_BODYPART\tint (13)",
            "body": "INVENTORY_BODYPART"
        },
        "INVENTORY_CLOTHING": {
            "prefix": "INVENTORY_CLOTHING\tint (5)",
            "body": "INVENTORY_CLOTHING"
        },
        "INVENTORY_GESTURE": {
            "prefix": "INVENTORY_GESTURE\tint (21)",
            "body": "INVENTORY_GESTURE"
        },
        "INVENTORY_LANDMARK": {
            "prefix": "INVENTORY_LANDMARK\tint (3)",
            "body": "INVENTORY_LANDMARK"
        },
        "INVENTORY_NONE": {
            "prefix": "INVENTORY_NONE\tint (-1)",
            "body": "INVENTORY_NONE"
        },
        "INVENTORY_NOTECARD": {
            "prefix": "INVENTORY_NOTECARD\tint (7)",
            "body": "INVENTORY_NOTECARD"
        },
        "INVENTORY_OBJECT": {
            "prefix": "INVENTORY_OBJECT\tint (6)",
            "body": "INVENTORY_OBJECT"
        },
        "INVENTORY_SCRIPT": {
            "prefix": "INVENTORY_SCRIPT\tint (10)",
            "body": "INVENTORY_SCRIPT"
        },
        "INVENTORY_SOUND": {
            "prefix": "INVENTORY_SOUND\tint (1)",
            "body": "INVENTORY_SOUND"
        },
        "INVENTORY_TEXTURE": {
            "prefix": "INVENTORY_TEXTURE\tint (0)",
            "body": "INVENTORY_TEXTURE"
        },
        "JSON_APPEND": {
            "prefix": "JSON_APPEND\tint (-1)",
            "body": "JSON_APPEND"
        },
        "JSON_ARRAY": {
            "prefix": "JSON_ARRAY\tstr (\"&#xFDD2;\")",
            "body": "JSON_ARRAY"
        },
        "JSON_DELETE": {
            "prefix": "JSON_DELETE\tstr (\"&#xFDD8;\")",
            "body": "JSON_DELETE"
        },
        "JSON_FALSE": {
            "prefix": "JSON_FALSE\tstr (\"&#xFDD7;\")",
            "body": "JSON_FALSE"
        },
        "JSON_INVALID": {
            "prefix": "JSON_INVALID\tstr (\"&#xFDD0;\")",
            "body": "JSON_INVALID"
        },
        "JSON_NULL": {
            "prefix": "JSON_NULL\tstr (\"&#xFDD5;\")",
            "body": "JSON_NULL"
        },
        "JSON_NUMBER": {
            "prefix": "JSON_NUMBER\tstr (\"&#xFDD3;\")",
            "body": "JSON_NUMBER"
        },
        "JSON_OBJECT": {
            "prefix": "JSON_OBJECT\tstr (\"&#xFDD1;\")",
            "body": "JSON_OBJECT"
        },
        "JSON_STRING": {
            "prefix": "JSON_STRING\tstr (\"&#xFDD4;\")",
            "body": "JSON_STRING"
        },
        "JSON_TRUE": {
            "prefix": "JSON_TRUE\tstr (\"&#xFDD6;\")",
            "body": "JSON_TRUE"
        },
        "KFM_CMD_PAUSE": {
            "prefix": "KFM_CMD_PAUSE\tint (2)",
            "body": "KFM_CMD_PAUSE"
        },
        "KFM_CMD_PLAY": {
            "prefix": "KFM_CMD_PLAY\tint (0)",
            "body": "KFM_CMD_PLAY"
        },
        "KFM_CMD_SET_MODE": {
            "prefix": "KFM_CMD_SET_MODE\tint (3)",
            "body": "KFM_CMD_SET_MODE"
        },
        "KFM_CMD_STOP": {
            "prefix": "KFM_CMD_STOP\tint (1)",
            "body": "KFM_CMD_STOP"
        },
        "KFM_COMMAND": {
            "prefix": "KFM_COMMAND\tint (0)",
            "body": "KFM_COMMAND"
        },
        "KFM_DATA": {
            "prefix": "KFM_DATA\tint (2)",
            "body": "KFM_DATA"
        },
        "KFM_FORWARD": {
            "prefix": "KFM_FORWARD\tint (0)",
            "body": "KFM_FORWARD"
        },
        "KFM_LOOP": {
            "prefix": "KFM_LOOP\tint (1)",
            "body": "KFM_LOOP"
        },
        "KFM_MODE": {
            "prefix": "KFM_MODE\tint (1)",
            "body": "KFM_MODE"
        },
        "KFM_PING_PONG": {
            "prefix": "KFM_PING_PONG\tint (2)",
            "body": "KFM_PING_PONG"
        },
        "KFM_REVERSE": {
            "prefix": "KFM_REVERSE\tint (3)",
            "body": "KFM_REVERSE"
        },
        "KFM_ROTATION": {
            "prefix": "KFM_ROTATION\tint (1)",
            "body": "KFM_ROTATION"
        },
        "KFM_TRANSLATION": {
            "prefix": "KFM_TRANSLATION\tint (2)",
            "body": "KFM_TRANSLATION"
        },
        "LAND_LEVEL": {
            "prefix": "LAND_LEVEL\tint (0)",
            "body": "LAND_LEVEL"
        },
        "LAND_LOWER": {
            "prefix": "LAND_LOWER\tint (2)",
            "body": "LAND_LOWER"
        },
        "LAND_NOISE": {
            "prefix": "LAND_NOISE\tint (4)",
            "body": "LAND_NOISE"
        },
        "LAND_RAISE": {
            "prefix": "LAND_RAISE\tint (1)",
            "body": "LAND_RAISE"
        },
        "LAND_REVERT": {
            "prefix": "LAND_REVERT\tint (5)",
            "body": "LAND_REVERT"
        },
        "LAND_SMOOTH": {
            "prefix": "LAND_SMOOTH\tint (3)",
            "body": "LAND_SMOOTH"
        },
        "LINK_ALL_CHILDREN": {
            "prefix": "LINK_ALL_CHILDREN\tint (-3)",
            "body": "LINK_ALL_CHILDREN"
        },
        "LINK_ALL_OTHERS": {
            "prefix": "LINK_ALL_OTHERS\tint (-2)",
            "body": "LINK_ALL_OTHERS"
        },
        "LINK_ROOT": {
            "prefix": "LINK_ROOT\tint (1)",
            "body": "LINK_ROOT"
        },
        "LINK_SET": {
            "prefix": "LINK_SET\tint (-1)",
            "body": "LINK_SET"
        },
        "LINK_THIS": {
            "prefix": "LINK_THIS\tint (-4)",
            "body": "LINK_THIS"
        },
        "LIST_STAT_GEOMETRIC_MEAN": {
            "prefix": "LIST_STAT_GEOMETRIC_MEAN\tint (9)",
            "body": "LIST_STAT_GEOMETRIC_MEAN"
        },
        "LIST_STAT_MAX": {
            "prefix": "LIST_STAT_MAX\tint (2)",
            "body": "LIST_STAT_MAX"
        },
        "LIST_STAT_MEAN": {
            "prefix": "LIST_STAT_MEAN\tint (3)",
            "body": "LIST_STAT_MEAN"
        },
        "LIST_STAT_MEDIAN": {
            "prefix": "LIST_STAT_MEDIAN\tint (4)",
            "body": "LIST_STAT_MEDIAN"
        },
        "LIST_STAT_MIN": {
            "prefix": "LIST_STAT_MIN\tint (1)",
            "body": "LIST_STAT_MIN"
        },
        "LIST_STAT_NUM_COUNT": {
            "prefix": "LIST_STAT_NUM_COUNT\tint (8)",
            "body": "LIST_STAT_NUM_COUNT"
        },
        "LIST_STAT_RANGE": {
            "prefix": "LIST_STAT_RANGE\tint (0)",
            "body": "LIST_STAT_RANGE"
        },
        "LIST_STAT_STD_DEV": {
            "prefix": "LIST_STAT_STD_DEV\tint (5)",
            "body": "LIST_STAT_STD_DEV"
        },
        "LIST_STAT_SUM": {
            "prefix": "LIST_STAT_SUM\tint (6)",
            "body": "LIST_STAT_SUM"
        },
        "LIST_STAT_SUM_SQUARES": {
            "prefix": "LIST_STAT_SUM_SQUARES\tint (7)",
            "body": "LIST_STAT_SUM_SQUARES"
        },
        "LOOP": {
            "prefix": "LOOP\tint (0x2 = 2)",
            "body": "LOOP"
        },
        "MASK_BASE": {
            "prefix": "MASK_BASE\tint (0)",
            "body": "MASK_BASE"
        },
        "MASK_EVERYONE": {
            "prefix": "MASK_EVERYONE\tint (3)",
            "body": "MASK_EVERYONE"
        },
        "MASK_GROUP": {
            "prefix": "MASK_GROUP\tint (2)",
            "body": "MASK_GROUP"
        },
        "MASK_NEXT": {
            "prefix": "MASK_NEXT\tint (4)",
            "body": "MASK_NEXT"
        },
        "MASK_OWNER": {
            "prefix": "MASK_OWNER\tint (1)",
            "body": "MASK_OWNER"
        },
        "NULL_KEY": {
            "prefix": "NULL_KEY\tstr (\"00000000-0000-0000-0000-000000000000\")",
            "body": "NULL_KEY"
        },
        "OBJECT_ATTACHED_POINT": {
            "prefix": "OBJECT_ATTACHED_POINT\tint (19)",
            "body": "OBJECT_ATTACHED_POINT"
        },
        "OBJECT_BODY_SHAPE_TYPE": {
            "prefix": "OBJECT_BODY_SHAPE_TYPE\tint (26)",
            "body": "OBJECT_BODY_SHAPE_TYPE"
        },
        "OBJECT_CHARACTER_TIME": {
            "prefix": "OBJECT_CHARACTER_TIME\tint (17)",
            "body": "OBJECT_CHARACTER_TIME"
        },
        "OBJECT_CLICK_ACTION": {
            "prefix": "OBJECT_CLICK_ACTION\tint (28)",
            "body": "OBJECT_CLICK_ACTION"
        },
        "OBJECT_CREATOR": {
            "prefix": "OBJECT_CREATOR\tint (8)",
            "body": "OBJECT_CREATOR"
        },
        "OBJECT_DESC": {
            "prefix": "OBJECT_DESC\tint (2)",
            "body": "OBJECT_DESC"
        },
        "OBJECT_GROUP": {
            "prefix": "OBJECT_GROUP\tint (25)",
            "body": "OBJECT_GROUP"
        },
        "OBJECT_HOVER_HEIGHT": {
            "prefix": "OBJECT_HOVER_HEIGHT\tint (7)",
            "body": "OBJECT_HOVER_HEIGHT"
        },
        "OBJECT_LAST_OWNER_ID": {
            "prefix": "OBJECT_LAST_OWNER_ID\tint (27)",
            "body": "OBJECT_LAST_OWNER_ID"
        },
        "OBJECT_NAME": {
            "prefix": "OBJECT_NAME\tint (1)",
            "body": "OBJECT_NAME"
        },
        "OBJECT_OWNER": {
            "prefix": "OBJECT_OWNER\tint (6)",
            "body": "OBJECT_OWNER"
        },
        "OBJECT_PATHFINDING_TYPE": {
            "prefix": "OBJECT_PATHFINDING_TYPE\tint (20)",
            "body": "OBJECT_PATHFINDING_TYPE"
        },
        "OBJECT_PHANTOM": {
            "prefix": "OBJECT_PHANTOM\tint (22)",
            "body": "OBJECT_PHANTOM"
        },
        "OBJECT_PHYSICS": {
            "prefix": "OBJECT_PHYSICS\tint (21)",
            "body": "OBJECT_PHYSICS"
        },
        "OBJECT_PHYSICS_COST": {
            "prefix": "OBJECT_PHYSICS_COST\tint (16)",
            "body": "OBJECT_PHYSICS_COST"
        },
        "OBJECT_POS": {
            "prefix": "OBJECT_POS\tint (3)",
            "body": "OBJECT_POS"
        },
        "OBJECT_PRIM_EQUIVALENCE": {
            "prefix": "OBJECT_PRIM_EQUIVALENCE\tint (13)",
            "body": "OBJECT_PRIM_EQUIVALENCE"
        },
        "OBJECT_RENDER_WEIGHT": {
            "prefix": "OBJECT_RENDER_WEIGHT\tint (24)",
            "body": "OBJECT_RENDER_WEIGHT"
        },
        "OBJECT_RETURN_PARCEL": {
            "prefix": "OBJECT_RETURN_PARCEL\tint (1)",
            "body": "OBJECT_RETURN_PARCEL"
        },
        "OBJECT_RETURN_PARCEL_OWNER": {
            "prefix": "OBJECT_RETURN_PARCEL_OWNER\tint (2)",
            "body": "OBJECT_RETURN_PARCEL_OWNER"
        },
        "OBJECT_RETURN_REGION": {
            "prefix": "OBJECT_RETURN_REGION\tint (4)",
            "body": "OBJECT_RETURN_REGION"
        },
        "OBJECT_ROOT": {
            "prefix": "OBJECT_ROOT\tint (18)",
            "body": "OBJECT_ROOT"
        },
        "OBJECT_ROT": {
            "prefix": "OBJECT_ROT\tint (4)",
            "body": "OBJECT_ROT"
        },
        "OBJECT_RUNNING_SCRIPT_COUNT": {
            "prefix": "OBJECT_RUNNING_SCRIPT_COUNT\tint (9)",
            "body": "OBJECT_RUNNING_SCRIPT_COUNT"
        },
        "OBJECT_SCRIPT_MEMORY": {
            "prefix": "OBJECT_SCRIPT_MEMORY\tint (11)",
            "body": "OBJECT_SCRIPT_MEMORY"
        },
        "OBJECT_SCRIPT_TIME": {
            "prefix": "OBJECT_SCRIPT_TIME\tint (12)",
            "body": "OBJECT_SCRIPT_TIME"
        },
        "OBJECT_SERVER_COST": {
            "prefix": "OBJECT_SERVER_COST\tint (14)",
            "body": "OBJECT_SERVER_COST"
        },
        "OBJECT_STREAMING_COST": {
            "prefix": "OBJECT_STREAMING_COST\tint (15)",
            "body": "OBJECT_STREAMING_COST"
        },
        "OBJECT_TEMP_ON_REZ": {
            "prefix": "OBJECT_TEMP_ON_REZ\tint (23)",
            "body": "OBJECT_TEMP_ON_REZ"
        },
        "OBJECT_TOTAL_SCRIPT_COUNT": {
            "prefix": "OBJECT_TOTAL_SCRIPT_COUNT\tint (10)",
            "body": "OBJECT_TOTAL_SCRIPT_COUNT"
        },
        "OBJECT_UNKNOWN_DETAIL": {
            "prefix": "OBJECT_UNKNOWN_DETAIL\tint (-1)",
            "body": "OBJECT_UNKNOWN_DETAIL"
        },
        "OBJECT_VELOCITY": {
            "prefix": "OBJECT_VELOCITY\tint (5)",
            "body": "OBJECT_VELOCITY"
        },
        "OPT_AVATAR": {
            "prefix": "OPT_AVATAR\tint (1)",
            "body": "OPT_AVATAR"
        },
        "OPT_CHARACTER": {
            "prefix": "OPT_CHARACTER\tint (2)",
            "body": "OPT_CHARACTER"
        },
        "OPT_EXCLUSION_VOLUME": {
            "prefix": "OPT_EXCLUSION_VOLUME\tint (6)",
            "body": "OPT_EXCLUSION_VOLUME"
        },
        "OPT_LEGACY_LINKSET": {
            "prefix": "OPT_LEGACY_LINKSET\tint (0)",
            "body": "OPT_LEGACY_LINKSET"
        },
        "OPT_MATERIAL_VOLUME": {
            "prefix": "OPT_MATERIAL_VOLUME\tint (5)",
            "body": "OPT_MATERIAL_VOLUME"
        },
        "OPT_OTHER": {
            "prefix": "OPT_OTHER\tint (-1)",
            "body": "OPT_OTHER"
        },
        "OPT_STATIC_OBSTACLE": {
            "prefix": "OPT_STATIC_OBSTACLE\tint (4)",
            "body": "OPT_STATIC_OBSTACLE"
        },
        "OPT_WALKABLE": {
            "prefix": "OPT_WALKABLE\tint (3)",
            "body": "OPT_WALKABLE"
        },
        "PARCEL_COUNT_GROUP": {
            "prefix": "PARCEL_COUNT_GROUP\tint (2)",
            "body": "PARCEL_COUNT_GROUP"
        },
        "PARCEL_COUNT_OTHER": {
            "prefix": "PARCEL_COUNT_OTHER\tint (3)",
            "body": "PARCEL_COUNT_OTHER"
        },
        "PARCEL_COUNT_OWNER": {
            "prefix": "PARCEL_COUNT_OWNER\tint (1)",
            "body": "PARCEL_COUNT_OWNER"
        },
        "PARCEL_COUNT_SELECTED": {
            "prefix": "PARCEL_COUNT_SELECTED\tint (4)",
            "body": "PARCEL_COUNT_SELECTED"
        },
        "PARCEL_COUNT_TEMP": {
            "prefix": "PARCEL_COUNT_TEMP\tint (5)",
            "body": "PARCEL_COUNT_TEMP"
        },
        "PARCEL_COUNT_TOTAL": {
            "prefix": "PARCEL_COUNT_TOTAL\tint (0)",
            "body": "PARCEL_COUNT_TOTAL"
        },
        "PARCEL_DETAILS_AREA": {
            "prefix": "PARCEL_DETAILS_AREA\tint (4)",
            "body": "PARCEL_DETAILS_AREA"
        },
        "PARCEL_DETAILS_DESC": {
            "prefix": "PARCEL_DETAILS_DESC\tint (1)",
            "body": "PARCEL_DETAILS_DESC"
        },
        "PARCEL_DETAILS_GROUP": {
            "prefix": "PARCEL_DETAILS_GROUP\tint (3)",
            "body": "PARCEL_DETAILS_GROUP"
        },
        "PARCEL_DETAILS_ID": {
            "prefix": "PARCEL_DETAILS_ID\tint (5)",
            "body": "PARCEL_DETAILS_ID"
        },
        "PARCEL_DETAILS_NAME": {
            "prefix": "PARCEL_DETAILS_NAME\tint (0)",
            "body": "PARCEL_DETAILS_NAME"
        },
        "PARCEL_DETAILS_OWNER": {
            "prefix": "PARCEL_DETAILS_OWNER\tint (2)",
            "body": "PARCEL_DETAILS_OWNER"
        },
        "PARCEL_DETAILS_SEE_AVATARS": {
            "prefix": "PARCEL_DETAILS_SEE_AVATARS\tint (6)",
            "body": "PARCEL_DETAILS_SEE_AVATARS"
        },
        "PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY": {
            "prefix": "PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY\tint (0x08000000 = 134217728)",
            "body": "PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY"
        },
        "PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS": {
            "prefix": "PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS\tint (0x04000000 = 67108864)",
            "body": "PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS"
        },
        "PARCEL_FLAG_ALLOW_CREATE_OBJECTS": {
            "prefix": "PARCEL_FLAG_ALLOW_CREATE_OBJECTS\tint (0x40 = 64)",
            "body": "PARCEL_FLAG_ALLOW_CREATE_OBJECTS"
        },
        "PARCEL_FLAG_ALLOW_DAMAGE": {
            "prefix": "PARCEL_FLAG_ALLOW_DAMAGE\tint (0x20 = 32)",
            "body": "PARCEL_FLAG_ALLOW_DAMAGE"
        },
        "PARCEL_FLAG_ALLOW_FLY": {
            "prefix": "PARCEL_FLAG_ALLOW_FLY\tint (0x1 = 1)",
            "body": "PARCEL_FLAG_ALLOW_FLY"
        },
        "PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY": {
            "prefix": "PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY\tint (0x10000000 = 268435456)",
            "body": "PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY"
        },
        "PARCEL_FLAG_ALLOW_GROUP_SCRIPTS": {
            "prefix": "PARCEL_FLAG_ALLOW_GROUP_SCRIPTS\tint (0x02000000 = 33554432)",
            "body": "PARCEL_FLAG_ALLOW_GROUP_SCRIPTS"
        },
        "PARCEL_FLAG_ALLOW_LANDMARK": {
            "prefix": "PARCEL_FLAG_ALLOW_LANDMARK\tint (0x8 = 8)",
            "body": "PARCEL_FLAG_ALLOW_LANDMARK"
        },
        "PARCEL_FLAG_ALLOW_SCRIPTS": {
            "prefix": "PARCEL_FLAG_ALLOW_SCRIPTS\tint (0x2 = 2)",
            "body": "PARCEL_FLAG_ALLOW_SCRIPTS"
        },
        "PARCEL_FLAG_ALLOW_TERRAFORM": {
            "prefix": "PARCEL_FLAG_ALLOW_TERRAFORM\tint (0x10 = 16)",
            "body": "PARCEL_FLAG_ALLOW_TERRAFORM"
        },
        "PARCEL_FLAG_LOCAL_SOUND_ONLY": {
            "prefix": "PARCEL_FLAG_LOCAL_SOUND_ONLY\tint (0x8000 = 32768)",
            "body": "PARCEL_FLAG_LOCAL_SOUND_ONLY"
        },
        "PARCEL_FLAG_RESTRICT_PUSHOBJECT": {
            "prefix": "PARCEL_FLAG_RESTRICT_PUSHOBJECT\tint (0x200000 = 2097152)",
            "body": "PARCEL_FLAG_RESTRICT_PUSHOBJECT"
        },
        "PARCEL_FLAG_USE_ACCESS_GROUP": {
            "prefix": "PARCEL_FLAG_USE_ACCESS_GROUP\tint (0x100 = 256)",
            "body": "PARCEL_FLAG_USE_ACCESS_GROUP"
        },
        "PARCEL_FLAG_USE_ACCESS_LIST": {
            "prefix": "PARCEL_FLAG_USE_ACCESS_LIST\tint (0x200 = 512)",
            "body": "PARCEL_FLAG_USE_ACCESS_LIST"
        },
        "PARCEL_FLAG_USE_BAN_LIST": {
            "prefix": "PARCEL_FLAG_USE_BAN_LIST\tint (0x400 = 1024)",
            "body": "PARCEL_FLAG_USE_BAN_LIST"
        },
        "PARCEL_FLAG_USE_LAND_PASS_LIST": {
            "prefix": "PARCEL_FLAG_USE_LAND_PASS_LIST\tint (0x800 = 2048)",
            "body": "PARCEL_FLAG_USE_LAND_PASS_LIST"
        },
        "PARCEL_MEDIA_COMMAND_AGENT": {
            "prefix": "PARCEL_MEDIA_COMMAND_AGENT\tint (7)",
            "body": "PARCEL_MEDIA_COMMAND_AGENT"
        },
        "PARCEL_MEDIA_COMMAND_AUTO_ALIGN": {
            "prefix": "PARCEL_MEDIA_COMMAND_AUTO_ALIGN\tint (9)",
            "body": "PARCEL_MEDIA_COMMAND_AUTO_ALIGN"
        },
        "PARCEL_MEDIA_COMMAND_DESC": {
            "prefix": "PARCEL_MEDIA_COMMAND_DESC\tint (12)",
            "body": "PARCEL_MEDIA_COMMAND_DESC"
        },
        "PARCEL_MEDIA_COMMAND_LOOP": {
            "prefix": "PARCEL_MEDIA_COMMAND_LOOP\tint (3)",
            "body": "PARCEL_MEDIA_COMMAND_LOOP"
        },
        "PARCEL_MEDIA_COMMAND_LOOP_SET": {
            "prefix": "PARCEL_MEDIA_COMMAND_LOOP_SET\tint (13)",
            "body": "PARCEL_MEDIA_COMMAND_LOOP_SET"
        },
        "PARCEL_MEDIA_COMMAND_PAUSE": {
            "prefix": "PARCEL_MEDIA_COMMAND_PAUSE\tint (1)",
            "body": "PARCEL_MEDIA_COMMAND_PAUSE"
        },
        "PARCEL_MEDIA_COMMAND_PLAY": {
            "prefix": "PARCEL_MEDIA_COMMAND_PLAY\tint (2)",
            "body": "PARCEL_MEDIA_COMMAND_PLAY"
        },
        "PARCEL_MEDIA_COMMAND_SIZE": {
            "prefix": "PARCEL_MEDIA_COMMAND_SIZE\tint (11)",
            "body": "PARCEL_MEDIA_COMMAND_SIZE"
        },
        "PARCEL_MEDIA_COMMAND_STOP": {
            "prefix": "PARCEL_MEDIA_COMMAND_STOP\tint (0)",
            "body": "PARCEL_MEDIA_COMMAND_STOP"
        },
        "PARCEL_MEDIA_COMMAND_TEXTURE": {
            "prefix": "PARCEL_MEDIA_COMMAND_TEXTURE\tint (4)",
            "body": "PARCEL_MEDIA_COMMAND_TEXTURE"
        },
        "PARCEL_MEDIA_COMMAND_TIME": {
            "prefix": "PARCEL_MEDIA_COMMAND_TIME\tint (6)",
            "body": "PARCEL_MEDIA_COMMAND_TIME"
        },
        "PARCEL_MEDIA_COMMAND_TYPE": {
            "prefix": "PARCEL_MEDIA_COMMAND_TYPE\tint (10)",
            "body": "PARCEL_MEDIA_COMMAND_TYPE"
        },
        "PARCEL_MEDIA_COMMAND_UNLOAD": {
            "prefix": "PARCEL_MEDIA_COMMAND_UNLOAD\tint (8)",
            "body": "PARCEL_MEDIA_COMMAND_UNLOAD"
        },
        "PARCEL_MEDIA_COMMAND_URL": {
            "prefix": "PARCEL_MEDIA_COMMAND_URL\tint (5)",
            "body": "PARCEL_MEDIA_COMMAND_URL"
        },
        "PASS_ALWAYS": {
            "prefix": "PASS_ALWAYS\tint (1)",
            "body": "PASS_ALWAYS"
        },
        "PASS_IF_NOT_HANDLED": {
            "prefix": "PASS_IF_NOT_HANDLED\tint (0)",
            "body": "PASS_IF_NOT_HANDLED"
        },
        "PASS_NEVER": {
            "prefix": "PASS_NEVER\tint (2)",
            "body": "PASS_NEVER"
        },
        "PASSIVE": {
            "prefix": "PASSIVE\tint (0x4 = 4)",
            "body": "PASSIVE"
        },
        "PATROL_PAUSE_AT_WAYPOINTS": {
            "prefix": "PATROL_PAUSE_AT_WAYPOINTS\tint (0)",
            "body": "PATROL_PAUSE_AT_WAYPOINTS"
        },
        "PAYMENT_INFO_ON_FILE": {
            "prefix": "PAYMENT_INFO_ON_FILE\tint (1)",
            "body": "PAYMENT_INFO_ON_FILE"
        },
        "PAYMENT_INFO_USED": {
            "prefix": "PAYMENT_INFO_USED\tint (2)",
            "body": "PAYMENT_INFO_USED"
        },
        "PAY_DEFAULT": {
            "prefix": "PAY_DEFAULT\tint (-2)",
            "body": "PAY_DEFAULT"
        },
        "PAY_HIDE": {
            "prefix": "PAY_HIDE\tint (-1)",
            "body": "PAY_HIDE"
        },
        "PERMISSION_ATTACH": {
            "prefix": "PERMISSION_ATTACH\tint (0x20 = 32)",
            "body": "PERMISSION_ATTACH"
        },
        "PERMISSION_CHANGE_LINKS": {
            "prefix": "PERMISSION_CHANGE_LINKS\tint (0x80 = 128)",
            "body": "PERMISSION_CHANGE_LINKS"
        },
        "PERMISSION_CONTROL_CAMERA": {
            "prefix": "PERMISSION_CONTROL_CAMERA\tint (0x800 = 2048)",
            "body": "PERMISSION_CONTROL_CAMERA"
        },
        "PERMISSION_DEBIT": {
            "prefix": "PERMISSION_DEBIT\tint (0x2 = 2)",
            "body": "PERMISSION_DEBIT"
        },
        "PERMISSION_OVERRIDE_ANIMATIONS": {
            "prefix": "PERMISSION_OVERRIDE_ANIMATIONS\tint (0x8000 = 32768)",
            "body": "PERMISSION_OVERRIDE_ANIMATIONS"
        },
        "PERMISSION_RETURN_OBJECTS": {
            "prefix": "PERMISSION_RETURN_OBJECTS\tint (0x10000 = 65536)",
            "body": "PERMISSION_RETURN_OBJECTS"
        },
        "PERMISSION_SILENT_ESTATE_MANAGEMENT": {
            "prefix": "PERMISSION_SILENT_ESTATE_MANAGEMENT\tint (0x4000 = 16384)",
            "body": "PERMISSION_SILENT_ESTATE_MANAGEMENT"
        },
        "PERMISSION_TAKE_CONTROLS": {
            "prefix": "PERMISSION_TAKE_CONTROLS\tint (0x4 = 4)",
            "body": "PERMISSION_TAKE_CONTROLS"
        },
        "PERMISSION_TELEPORT": {
            "prefix": "PERMISSION_TELEPORT\tint (0x1000 = 4096)",
            "body": "PERMISSION_TELEPORT"
        },
        "PERMISSION_TRACK_CAMERA": {
            "prefix": "PERMISSION_TRACK_CAMERA\tint (0x400 = 1024)",
            "body": "PERMISSION_TRACK_CAMERA"
        },
        "PERMISSION_TRIGGER_ANIMATION": {
            "prefix": "PERMISSION_TRIGGER_ANIMATION\tint (0x10 = 16)",
            "body": "PERMISSION_TRIGGER_ANIMATION"
        },
        "PERM_ALL": {
            "prefix": "PERM_ALL\tint (0x7FFFFFFF = 2147483647)",
            "body": "PERM_ALL"
        },
        "PERM_COPY": {
            "prefix": "PERM_COPY\tint (0x8000 = 32768)",
            "body": "PERM_COPY"
        },
        "PERM_MODIFY": {
            "prefix": "PERM_MODIFY\tint (0x4000 = 16384)",
            "body": "PERM_MODIFY"
        },
        "PERM_MOVE": {
            "prefix": "PERM_MOVE\tint (0x80000 = 524288)",
            "body": "PERM_MOVE"
        },
        "PERM_TRANSFER": {
            "prefix": "PERM_TRANSFER\tint (0x2000 = 8192)",
            "body": "PERM_TRANSFER"
        },
        "PI": {
            "prefix": "PI\tfloat (3.141593)",
            "body": "PI"
        },
        "PING_PONG": {
            "prefix": "PING_PONG\tint (0x8 = 8)",
            "body": "PING_PONG"
        },
        "PI_BY_TWO": {
            "prefix": "PI_BY_TWO\tfloat (1.570796)",
            "body": "PI_BY_TWO"
        },
        "PRIM_ALPHA_MODE": {
            "prefix": "PRIM_ALPHA_MODE\tint (38)",
            "body": "PRIM_ALPHA_MODE"
        },
        "PRIM_ALPHA_MODE_BLEND": {
            "prefix": "PRIM_ALPHA_MODE_BLEND\tint (1)",
            "body": "PRIM_ALPHA_MODE_BLEND"
        },
        "PRIM_ALPHA_MODE_EMISSIVE": {
            "prefix": "PRIM_ALPHA_MODE_EMISSIVE\tint (3)",
            "body": "PRIM_ALPHA_MODE_EMISSIVE"
        },
        "PRIM_ALPHA_MODE_MASK": {
            "prefix": "PRIM_ALPHA_MODE_MASK\tint (2)",
            "body": "PRIM_ALPHA_MODE_MASK"
        },
        "PRIM_ALPHA_MODE_NONE": {
            "prefix": "PRIM_ALPHA_MODE_NONE\tint (0)",
            "body": "PRIM_ALPHA_MODE_NONE"
        },
        "PRIM_BUMP_BARK": {
            "prefix": "PRIM_BUMP_BARK\tint (4)",
            "body": "PRIM_BUMP_BARK"
        },
        "PRIM_BUMP_BLOBS": {
            "prefix": "PRIM_BUMP_BLOBS\tint (12)",
            "body": "PRIM_BUMP_BLOBS"
        },
        "PRIM_BUMP_BRICKS": {
            "prefix": "PRIM_BUMP_BRICKS\tint (5)",
            "body": "PRIM_BUMP_BRICKS"
        },
        "PRIM_BUMP_BRIGHT": {
            "prefix": "PRIM_BUMP_BRIGHT\tint (1)",
            "body": "PRIM_BUMP_BRIGHT"
        },
        "PRIM_BUMP_CHECKER": {
            "prefix": "PRIM_BUMP_CHECKER\tint (6)",
            "body": "PRIM_BUMP_CHECKER"
        },
        "PRIM_BUMP_CONCRETE": {
            "prefix": "PRIM_BUMP_CONCRETE\tint (7)",
            "body": "PRIM_BUMP_CONCRETE"
        },
        "PRIM_BUMP_DARK": {
            "prefix": "PRIM_BUMP_DARK\tint (2)",
            "body": "PRIM_BUMP_DARK"
        },
        "PRIM_BUMP_DISKS": {
            "prefix": "PRIM_BUMP_DISKS\tint (10)",
            "body": "PRIM_BUMP_DISKS"
        },
        "PRIM_BUMP_GRAVEL": {
            "prefix": "PRIM_BUMP_GRAVEL\tint (11)",
            "body": "PRIM_BUMP_GRAVEL"
        },
        "PRIM_BUMP_LARGETILE": {
            "prefix": "PRIM_BUMP_LARGETILE\tint (14)",
            "body": "PRIM_BUMP_LARGETILE"
        },
        "PRIM_BUMP_NONE": {
            "prefix": "PRIM_BUMP_NONE\tint (0)",
            "body": "PRIM_BUMP_NONE"
        },
        "PRIM_BUMP_SHINY": {
            "prefix": "PRIM_BUMP_SHINY\tint (19)",
            "body": "PRIM_BUMP_SHINY"
        },
        "PRIM_BUMP_SIDING": {
            "prefix": "PRIM_BUMP_SIDING\tint (13)",
            "body": "PRIM_BUMP_SIDING"
        },
        "PRIM_BUMP_STONE": {
            "prefix": "PRIM_BUMP_STONE\tint (9)",
            "body": "PRIM_BUMP_STONE"
        },
        "PRIM_BUMP_STUCCO": {
            "prefix": "PRIM_BUMP_STUCCO\tint (15)",
            "body": "PRIM_BUMP_STUCCO"
        },
        "PRIM_BUMP_SUCTION": {
            "prefix": "PRIM_BUMP_SUCTION\tint (16)",
            "body": "PRIM_BUMP_SUCTION"
        },
        "PRIM_BUMP_TILE": {
            "prefix": "PRIM_BUMP_TILE\tint (8)",
            "body": "PRIM_BUMP_TILE"
        },
        "PRIM_BUMP_WEAVE": {
            "prefix": "PRIM_BUMP_WEAVE\tint (17)",
            "body": "PRIM_BUMP_WEAVE"
        },
        "PRIM_BUMP_WOOD": {
            "prefix": "PRIM_BUMP_WOOD\tint (3)",
            "body": "PRIM_BUMP_WOOD"
        },
        "PRIM_COLOR": {
            "prefix": "PRIM_COLOR\tint (18)",
            "body": "PRIM_COLOR"
        },
        "PRIM_DESC": {
            "prefix": "PRIM_DESC\tint (28)",
            "body": "PRIM_DESC"
        },
        "PRIM_FLEXIBLE": {
            "prefix": "PRIM_FLEXIBLE\tint (21)",
            "body": "PRIM_FLEXIBLE"
        },
        "PRIM_FULLBRIGHT": {
            "prefix": "PRIM_FULLBRIGHT\tint (20)",
            "body": "PRIM_FULLBRIGHT"
        },
        "PRIM_GLOW": {
            "prefix": "PRIM_GLOW\tint (25)",
            "body": "PRIM_GLOW"
        },
        "PRIM_HOLE_CIRCLE": {
            "prefix": "PRIM_HOLE_CIRCLE\tint (0x10 = 16)",
            "body": "PRIM_HOLE_CIRCLE"
        },
        "PRIM_HOLE_DEFAULT": {
            "prefix": "PRIM_HOLE_DEFAULT\tint (0)",
            "body": "PRIM_HOLE_DEFAULT"
        },
        "PRIM_HOLE_SQUARE": {
            "prefix": "PRIM_HOLE_SQUARE\tint (0x20 = 32)",
            "body": "PRIM_HOLE_SQUARE"
        },
        "PRIM_HOLE_TRIANGLE": {
            "prefix": "PRIM_HOLE_TRIANGLE\tint (0x30 = 48)",
            "body": "PRIM_HOLE_TRIANGLE"
        },
        "PRIM_LINK_TARGET": {
            "prefix": "PRIM_LINK_TARGET\tint (34)",
            "body": "PRIM_LINK_TARGET"
        },
        "PRIM_MATERIAL": {
            "prefix": "PRIM_MATERIAL\tint (2)",
            "body": "PRIM_MATERIAL"
        },
        "PRIM_MATERIAL_FLESH": {
            "prefix": "PRIM_MATERIAL_FLESH\tint (4)",
            "body": "PRIM_MATERIAL_FLESH"
        },
        "PRIM_MATERIAL_GLASS": {
            "prefix": "PRIM_MATERIAL_GLASS\tint (2)",
            "body": "PRIM_MATERIAL_GLASS"
        },
        "PRIM_MATERIAL_METAL": {
            "prefix": "PRIM_MATERIAL_METAL\tint (1)",
            "body": "PRIM_MATERIAL_METAL"
        },
        "PRIM_MATERIAL_PLASTIC": {
            "prefix": "PRIM_MATERIAL_PLASTIC\tint (5)",
            "body": "PRIM_MATERIAL_PLASTIC"
        },
        "PRIM_MATERIAL_RUBBER": {
            "prefix": "PRIM_MATERIAL_RUBBER\tint (6)",
            "body": "PRIM_MATERIAL_RUBBER"
        },
        "PRIM_MATERIAL_STONE": {
            "prefix": "PRIM_MATERIAL_STONE\tint (0)",
            "body": "PRIM_MATERIAL_STONE"
        },
        "PRIM_MATERIAL_WOOD": {
            "prefix": "PRIM_MATERIAL_WOOD\tint (3)",
            "body": "PRIM_MATERIAL_WOOD"
        },
        "PRIM_MEDIA_ALT_IMAGE_ENABLE": {
            "prefix": "PRIM_MEDIA_ALT_IMAGE_ENABLE\tint (0)",
            "body": "PRIM_MEDIA_ALT_IMAGE_ENABLE"
        },
        "PRIM_MEDIA_AUTO_LOOP": {
            "prefix": "PRIM_MEDIA_AUTO_LOOP\tint (4)",
            "body": "PRIM_MEDIA_AUTO_LOOP"
        },
        "PRIM_MEDIA_AUTO_PLAY": {
            "prefix": "PRIM_MEDIA_AUTO_PLAY\tint (5)",
            "body": "PRIM_MEDIA_AUTO_PLAY"
        },
        "PRIM_MEDIA_AUTO_SCALE": {
            "prefix": "PRIM_MEDIA_AUTO_SCALE\tint (6)",
            "body": "PRIM_MEDIA_AUTO_SCALE"
        },
        "PRIM_MEDIA_AUTO_ZOOM": {
            "prefix": "PRIM_MEDIA_AUTO_ZOOM\tint (7)",
            "body": "PRIM_MEDIA_AUTO_ZOOM"
        },
        "PRIM_MEDIA_CONTROLS": {
            "prefix": "PRIM_MEDIA_CONTROLS\tint (1)",
            "body": "PRIM_MEDIA_CONTROLS"
        },
        "PRIM_MEDIA_CONTROLS_MINI": {
            "prefix": "PRIM_MEDIA_CONTROLS_MINI\tint (1)",
            "body": "PRIM_MEDIA_CONTROLS_MINI"
        },
        "PRIM_MEDIA_CONTROLS_STANDARD": {
            "prefix": "PRIM_MEDIA_CONTROLS_STANDARD\tint (0)",
            "body": "PRIM_MEDIA_CONTROLS_STANDARD"
        },
        "PRIM_MEDIA_CURRENT_URL": {
            "prefix": "PRIM_MEDIA_CURRENT_URL\tint (2)",
            "body": "PRIM_MEDIA_CURRENT_URL"
        },
        "PRIM_MEDIA_FIRST_CLICK_INTERACT": {
            "prefix": "PRIM_MEDIA_FIRST_CLICK_INTERACT\tint (8)",
            "body": "PRIM_MEDIA_FIRST_CLICK_INTERACT"
        },
        "PRIM_MEDIA_HEIGHT_PIXELS": {
            "prefix": "PRIM_MEDIA_HEIGHT_PIXELS\tint (10)",
            "body": "PRIM_MEDIA_HEIGHT_PIXELS"
        },
        "PRIM_MEDIA_HOME_URL": {
            "prefix": "PRIM_MEDIA_HOME_URL\tint (2)",
            "body": "PRIM_MEDIA_HOME_URL"
        },
        "PRIM_MEDIA_MAX_HEIGHT_PIXELS": {
            "prefix": "PRIM_MEDIA_MAX_HEIGHT_PIXELS\tint (2048)",
            "body": "PRIM_MEDIA_MAX_HEIGHT_PIXELS"
        },
        "PRIM_MEDIA_MAX_URL_LENGTH": {
            "prefix": "PRIM_MEDIA_MAX_URL_LENGTH\tint (1024)",
            "body": "PRIM_MEDIA_MAX_URL_LENGTH"
        },
        "PRIM_MEDIA_MAX_WHITELIST_COUNT": {
            "prefix": "PRIM_MEDIA_MAX_WHITELIST_COUNT\tint (64)",
            "body": "PRIM_MEDIA_MAX_WHITELIST_COUNT"
        },
        "PRIM_MEDIA_MAX_WHITELIST_SIZE": {
            "prefix": "PRIM_MEDIA_MAX_WHITELIST_SIZE\tint (1024)",
            "body": "PRIM_MEDIA_MAX_WHITELIST_SIZE"
        },
        "PRIM_MEDIA_MAX_WIDTH_PIXELS": {
            "prefix": "PRIM_MEDIA_MAX_WIDTH_PIXELS\tint (2048)",
            "body": "PRIM_MEDIA_MAX_WIDTH_PIXELS"
        },
        "PRIM_MEDIA_PARAM_MAX": {
            "prefix": "PRIM_MEDIA_PARAM_MAX\tint (14)",
            "body": "PRIM_MEDIA_PARAM_MAX"
        },
        "PRIM_MEDIA_PERMS_CONTROL": {
            "prefix": "PRIM_MEDIA_PERMS_CONTROL\tint (14)",
            "body": "PRIM_MEDIA_PERMS_CONTROL"
        },
        "PRIM_MEDIA_PERMS_INTERACT": {
            "prefix": "PRIM_MEDIA_PERMS_INTERACT\tint (13)",
            "body": "PRIM_MEDIA_PERMS_INTERACT"
        },
        "PRIM_MEDIA_PERM_ANYONE": {
            "prefix": "PRIM_MEDIA_PERM_ANYONE\tint (0x4 = 4)",
            "body": "PRIM_MEDIA_PERM_ANYONE"
        },
        "PRIM_MEDIA_PERM_GROUP": {
            "prefix": "PRIM_MEDIA_PERM_GROUP\tint (0x2 = 2)",
            "body": "PRIM_MEDIA_PERM_GROUP"
        },
        "PRIM_MEDIA_PERM_NONE": {
            "prefix": "PRIM_MEDIA_PERM_NONE\tint (0x0 = 0)",
            "body": "PRIM_MEDIA_PERM_NONE"
        },
        "PRIM_MEDIA_PERM_OWNER": {
            "prefix": "PRIM_MEDIA_PERM_OWNER\tint (0x1 = 1)",
            "body": "PRIM_MEDIA_PERM_OWNER"
        },
        "PRIM_MEDIA_WHITELIST": {
            "prefix": "PRIM_MEDIA_WHITELIST\tint (12)",
            "body": "PRIM_MEDIA_WHITELIST"
        },
        "PRIM_MEDIA_WHITELIST_ENABLE": {
            "prefix": "PRIM_MEDIA_WHITELIST_ENABLE\tint (11)",
            "body": "PRIM_MEDIA_WHITELIST_ENABLE"
        },
        "PRIM_MEDIA_WIDTH_PIXELS": {
            "prefix": "PRIM_MEDIA_WIDTH_PIXELS\tint (9)",
            "body": "PRIM_MEDIA_WIDTH_PIXELS"
        },
        "PRIM_NAME": {
            "prefix": "PRIM_NAME\tint (27)",
            "body": "PRIM_NAME"
        },
        "PRIM_NORMAL": {
            "prefix": "PRIM_NORMAL\tint (37)",
            "body": "PRIM_NORMAL"
        },
        "PRIM_OMEGA": {
            "prefix": "PRIM_OMEGA\tint (32)",
            "body": "PRIM_OMEGA"
        },
        "PRIM_PHANTOM": {
            "prefix": "PRIM_PHANTOM\tint (5)",
            "body": "PRIM_PHANTOM"
        },
        "PRIM_PHYSICS": {
            "prefix": "PRIM_PHYSICS\tint (3)",
            "body": "PRIM_PHYSICS"
        },
        "PRIM_PHYSICS_SHAPE_CONVEX": {
            "prefix": "PRIM_PHYSICS_SHAPE_CONVEX\tint (2)",
            "body": "PRIM_PHYSICS_SHAPE_CONVEX"
        },
        "PRIM_PHYSICS_SHAPE_NONE": {
            "prefix": "PRIM_PHYSICS_SHAPE_NONE\tint (1)",
            "body": "PRIM_PHYSICS_SHAPE_NONE"
        },
        "PRIM_PHYSICS_SHAPE_PRIM": {
            "prefix": "PRIM_PHYSICS_SHAPE_PRIM\tint (0)",
            "body": "PRIM_PHYSICS_SHAPE_PRIM"
        },
        "PRIM_PHYSICS_SHAPE_TYPE": {
            "prefix": "PRIM_PHYSICS_SHAPE_TYPE\tint (30)",
            "body": "PRIM_PHYSICS_SHAPE_TYPE"
        },
        "PRIM_POINT_LIGHT": {
            "prefix": "PRIM_POINT_LIGHT\tint (23)",
            "body": "PRIM_POINT_LIGHT"
        },
        "PRIM_POSITION": {
            "prefix": "PRIM_POSITION\tint (6)",
            "body": "PRIM_POSITION"
        },
        "PRIM_POS_LOCAL": {
            "prefix": "PRIM_POS_LOCAL\tint (33)",
            "body": "PRIM_POS_LOCAL"
        },
        "PRIM_ROTATION": {
            "prefix": "PRIM_ROTATION\tint (8)",
            "body": "PRIM_ROTATION"
        },
        "PRIM_ROT_LOCAL": {
            "prefix": "PRIM_ROT_LOCAL\tint (29)",
            "body": "PRIM_ROT_LOCAL"
        },
        "PRIM_SCULPT_FLAG_INVERT": {
            "prefix": "PRIM_SCULPT_FLAG_INVERT\tint (0x40 = 64)",
            "body": "PRIM_SCULPT_FLAG_INVERT"
        },
        "PRIM_SCULPT_FLAG_MIRROR": {
            "prefix": "PRIM_SCULPT_FLAG_MIRROR\tint (0x80 = 128)",
            "body": "PRIM_SCULPT_FLAG_MIRROR"
        },
        "PRIM_SCULPT_TYPE_CYLINDER": {
            "prefix": "PRIM_SCULPT_TYPE_CYLINDER\tint (4)",
            "body": "PRIM_SCULPT_TYPE_CYLINDER"
        },
        "PRIM_SCULPT_TYPE_MASK": {
            "prefix": "PRIM_SCULPT_TYPE_MASK\tint (7)",
            "body": "PRIM_SCULPT_TYPE_MASK"
        },
        "PRIM_SCULPT_TYPE_PLANE": {
            "prefix": "PRIM_SCULPT_TYPE_PLANE\tint (3)",
            "body": "PRIM_SCULPT_TYPE_PLANE"
        },
        "PRIM_SCULPT_TYPE_SPHERE": {
            "prefix": "PRIM_SCULPT_TYPE_SPHERE\tint (1)",
            "body": "PRIM_SCULPT_TYPE_SPHERE"
        },
        "PRIM_SCULPT_TYPE_TORUS": {
            "prefix": "PRIM_SCULPT_TYPE_TORUS\tint (2)",
            "body": "PRIM_SCULPT_TYPE_TORUS"
        },
        "PRIM_SHINY_HIGH": {
            "prefix": "PRIM_SHINY_HIGH\tint (3)",
            "body": "PRIM_SHINY_HIGH"
        },
        "PRIM_SHINY_LOW": {
            "prefix": "PRIM_SHINY_LOW\tint (1)",
            "body": "PRIM_SHINY_LOW"
        },
        "PRIM_SHINY_MEDIUM": {
            "prefix": "PRIM_SHINY_MEDIUM\tint (2)",
            "body": "PRIM_SHINY_MEDIUM"
        },
        "PRIM_SHINY_NONE": {
            "prefix": "PRIM_SHINY_NONE\tint (0)",
            "body": "PRIM_SHINY_NONE"
        },
        "PRIM_SIZE": {
            "prefix": "PRIM_SIZE\tint (7)",
            "body": "PRIM_SIZE"
        },
        "PRIM_SLICE": {
            "prefix": "PRIM_SLICE\tint (35)",
            "body": "PRIM_SLICE"
        },
        "PRIM_SPECULAR": {
            "prefix": "PRIM_SPECULAR\tint (36)",
            "body": "PRIM_SPECULAR"
        },
        "PRIM_TEMP_ON_REZ": {
            "prefix": "PRIM_TEMP_ON_REZ\tint (4)",
            "body": "PRIM_TEMP_ON_REZ"
        },
        "PRIM_TEXGEN": {
            "prefix": "PRIM_TEXGEN\tint (22)",
            "body": "PRIM_TEXGEN"
        },
        "PRIM_TEXGEN_DEFAULT": {
            "prefix": "PRIM_TEXGEN_DEFAULT\tint (0)",
            "body": "PRIM_TEXGEN_DEFAULT"
        },
        "PRIM_TEXGEN_PLANAR": {
            "prefix": "PRIM_TEXGEN_PLANAR\tint (1)",
            "body": "PRIM_TEXGEN_PLANAR"
        },
        "PRIM_TEXT": {
            "prefix": "PRIM_TEXT\tint (26)",
            "body": "PRIM_TEXT"
        },
        "PRIM_TEXTURE": {
            "prefix": "PRIM_TEXTURE\tint (17)",
            "body": "PRIM_TEXTURE"
        },
        "PRIM_TYPE": {
            "prefix": "PRIM_TYPE\tint (9)",
            "body": "PRIM_TYPE"
        },
        "PRIM_TYPE_BOX": {
            "prefix": "PRIM_TYPE_BOX\tint (0)",
            "body": "PRIM_TYPE_BOX"
        },
        "PRIM_TYPE_CYLINDER": {
            "prefix": "PRIM_TYPE_CYLINDER\tint (1)",
            "body": "PRIM_TYPE_CYLINDER"
        },
        "PRIM_TYPE_PRISM": {
            "prefix": "PRIM_TYPE_PRISM\tint (2)",
            "body": "PRIM_TYPE_PRISM"
        },
        "PRIM_TYPE_RING": {
            "prefix": "PRIM_TYPE_RING\tint (6)",
            "body": "PRIM_TYPE_RING"
        },
        "PRIM_TYPE_SCULPT": {
            "prefix": "PRIM_TYPE_SCULPT\tint (7)",
            "body": "PRIM_TYPE_SCULPT"
        },
        "PRIM_TYPE_SPHERE": {
            "prefix": "PRIM_TYPE_SPHERE\tint (3)",
            "body": "PRIM_TYPE_SPHERE"
        },
        "PRIM_TYPE_TORUS": {
            "prefix": "PRIM_TYPE_TORUS\tint (4)",
            "body": "PRIM_TYPE_TORUS"
        },
        "PRIM_TYPE_TUBE": {
            "prefix": "PRIM_TYPE_TUBE\tint (5)",
            "body": "PRIM_TYPE_TUBE"
        },
        "PROFILE_NONE": {
            "prefix": "PROFILE_NONE\tint (0)",
            "body": "PROFILE_NONE"
        },
        "PROFILE_SCRIPT_MEMORY": {
            "prefix": "PROFILE_SCRIPT_MEMORY\tint (1)",
            "body": "PROFILE_SCRIPT_MEMORY"
        },
        "PSYS_PART_BF_DEST_COLOR": {
            "prefix": "PSYS_PART_BF_DEST_COLOR\tint (2)",
            "body": "PSYS_PART_BF_DEST_COLOR"
        },
        "PSYS_PART_BF_ONE": {
            "prefix": "PSYS_PART_BF_ONE\tint (0)",
            "body": "PSYS_PART_BF_ONE"
        },
        "PSYS_PART_BF_ONE_MINUS_DEST_COLOR": {
            "prefix": "PSYS_PART_BF_ONE_MINUS_DEST_COLOR\tint (4)",
            "body": "PSYS_PART_BF_ONE_MINUS_DEST_COLOR"
        },
        "PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA": {
            "prefix": "PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA\tint (9)",
            "body": "PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA"
        },
        "PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR": {
            "prefix": "PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR\tint (5)",
            "body": "PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR"
        },
        "PSYS_PART_BF_SOURCE_ALPHA": {
            "prefix": "PSYS_PART_BF_SOURCE_ALPHA\tint (7)",
            "body": "PSYS_PART_BF_SOURCE_ALPHA"
        },
        "PSYS_PART_BF_SOURCE_COLOR": {
            "prefix": "PSYS_PART_BF_SOURCE_COLOR\tint (3)",
            "body": "PSYS_PART_BF_SOURCE_COLOR"
        },
        "PSYS_PART_BF_ZERO": {
            "prefix": "PSYS_PART_BF_ZERO\tint (1)",
            "body": "PSYS_PART_BF_ZERO"
        },
        "PSYS_PART_BLEND_FUNC_DEST": {
            "prefix": "PSYS_PART_BLEND_FUNC_DEST\tint (25)",
            "body": "PSYS_PART_BLEND_FUNC_DEST"
        },
        "PSYS_PART_BLEND_FUNC_SOURCE": {
            "prefix": "PSYS_PART_BLEND_FUNC_SOURCE\tint (24)",
            "body": "PSYS_PART_BLEND_FUNC_SOURCE"
        },
        "PSYS_PART_BOUNCE_MASK": {
            "prefix": "PSYS_PART_BOUNCE_MASK\tint (0x4 = 4)",
            "body": "PSYS_PART_BOUNCE_MASK"
        },
        "PSYS_PART_EMISSIVE_MASK": {
            "prefix": "PSYS_PART_EMISSIVE_MASK\tint (0x100 = 256)",
            "body": "PSYS_PART_EMISSIVE_MASK"
        },
        "PSYS_PART_END_ALPHA": {
            "prefix": "PSYS_PART_END_ALPHA\tint (4)",
            "body": "PSYS_PART_END_ALPHA"
        },
        "PSYS_PART_END_COLOR": {
            "prefix": "PSYS_PART_END_COLOR\tint (3)",
            "body": "PSYS_PART_END_COLOR"
        },
        "PSYS_PART_END_GLOW": {
            "prefix": "PSYS_PART_END_GLOW\tint (27)",
            "body": "PSYS_PART_END_GLOW"
        },
        "PSYS_PART_END_SCALE": {
            "prefix": "PSYS_PART_END_SCALE\tint (6)",
            "body": "PSYS_PART_END_SCALE"
        },
        "PSYS_PART_FLAGS": {
            "prefix": "PSYS_PART_FLAGS\tint (0)",
            "body": "PSYS_PART_FLAGS"
        },
        "PSYS_PART_FOLLOW_SRC_MASK": {
            "prefix": "PSYS_PART_FOLLOW_SRC_MASK\tint (0x10 = 16)",
            "body": "PSYS_PART_FOLLOW_SRC_MASK"
        },
        "PSYS_PART_FOLLOW_VELOCITY_MASK": {
            "prefix": "PSYS_PART_FOLLOW_VELOCITY_MASK\tint (0x20 = 32)",
            "body": "PSYS_PART_FOLLOW_VELOCITY_MASK"
        },
        "PSYS_PART_INTERP_COLOR_MASK": {
            "prefix": "PSYS_PART_INTERP_COLOR_MASK\tint (0x1 = 1)",
            "body": "PSYS_PART_INTERP_COLOR_MASK"
        },
        "PSYS_PART_INTERP_SCALE_MASK": {
            "prefix": "PSYS_PART_INTERP_SCALE_MASK\tint (0x2 = 2)",
            "body": "PSYS_PART_INTERP_SCALE_MASK"
        },
        "PSYS_PART_MAX_AGE": {
            "prefix": "PSYS_PART_MAX_AGE\tint (7)",
            "body": "PSYS_PART_MAX_AGE"
        },
        "PSYS_PART_RIBBON_MASK": {
            "prefix": "PSYS_PART_RIBBON_MASK\tint (0x400 = 1024)",
            "body": "PSYS_PART_RIBBON_MASK"
        },
        "PSYS_PART_START_ALPHA": {
            "prefix": "PSYS_PART_START_ALPHA\tint (2)",
            "body": "PSYS_PART_START_ALPHA"
        },
        "PSYS_PART_START_COLOR": {
            "prefix": "PSYS_PART_START_COLOR\tint (1)",
            "body": "PSYS_PART_START_COLOR"
        },
        "PSYS_PART_START_GLOW": {
            "prefix": "PSYS_PART_START_GLOW\tint (26)",
            "body": "PSYS_PART_START_GLOW"
        },
        "PSYS_PART_START_SCALE": {
            "prefix": "PSYS_PART_START_SCALE\tint (5)",
            "body": "PSYS_PART_START_SCALE"
        },
        "PSYS_PART_TARGET_LINEAR_MASK": {
            "prefix": "PSYS_PART_TARGET_LINEAR_MASK\tint (0x80 = 128)",
            "body": "PSYS_PART_TARGET_LINEAR_MASK"
        },
        "PSYS_PART_TARGET_POS_MASK": {
            "prefix": "PSYS_PART_TARGET_POS_MASK\tint (0x40 = 64)",
            "body": "PSYS_PART_TARGET_POS_MASK"
        },
        "PSYS_PART_WIND_MASK": {
            "prefix": "PSYS_PART_WIND_MASK\tint (0x8 = 8)",
            "body": "PSYS_PART_WIND_MASK"
        },
        "PSYS_SRC_ACCEL": {
            "prefix": "PSYS_SRC_ACCEL\tint (8)",
            "body": "PSYS_SRC_ACCEL"
        },
        "PSYS_SRC_ANGLE_BEGIN": {
            "prefix": "PSYS_SRC_ANGLE_BEGIN\tint (22)",
            "body": "PSYS_SRC_ANGLE_BEGIN"
        },
        "PSYS_SRC_ANGLE_END": {
            "prefix": "PSYS_SRC_ANGLE_END\tint (23)",
            "body": "PSYS_SRC_ANGLE_END"
        },
        "PSYS_SRC_BURST_PART_COUNT": {
            "prefix": "PSYS_SRC_BURST_PART_COUNT\tint (15)",
            "body": "PSYS_SRC_BURST_PART_COUNT"
        },
        "PSYS_SRC_BURST_RADIUS": {
            "prefix": "PSYS_SRC_BURST_RADIUS\tint (16)",
            "body": "PSYS_SRC_BURST_RADIUS"
        },
        "PSYS_SRC_BURST_RATE": {
            "prefix": "PSYS_SRC_BURST_RATE\tint (13)",
            "body": "PSYS_SRC_BURST_RATE"
        },
        "PSYS_SRC_BURST_SPEED_MAX": {
            "prefix": "PSYS_SRC_BURST_SPEED_MAX\tint (18)",
            "body": "PSYS_SRC_BURST_SPEED_MAX"
        },
        "PSYS_SRC_BURST_SPEED_MIN": {
            "prefix": "PSYS_SRC_BURST_SPEED_MIN\tint (17)",
            "body": "PSYS_SRC_BURST_SPEED_MIN"
        },
        "PSYS_SRC_MAX_AGE": {
            "prefix": "PSYS_SRC_MAX_AGE\tint (19)",
            "body": "PSYS_SRC_MAX_AGE"
        },
        "PSYS_SRC_OMEGA": {
            "prefix": "PSYS_SRC_OMEGA\tint (21)",
            "body": "PSYS_SRC_OMEGA"
        },
        "PSYS_SRC_PATTERN": {
            "prefix": "PSYS_SRC_PATTERN\tint (9)",
            "body": "PSYS_SRC_PATTERN"
        },
        "PSYS_SRC_PATTERN_ANGLE": {
            "prefix": "PSYS_SRC_PATTERN_ANGLE\tint (4)",
            "body": "PSYS_SRC_PATTERN_ANGLE"
        },
        "PSYS_SRC_PATTERN_ANGLE_CONE": {
            "prefix": "PSYS_SRC_PATTERN_ANGLE_CONE\tint (8)",
            "body": "PSYS_SRC_PATTERN_ANGLE_CONE"
        },
        "PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY": {
            "prefix": "PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY\tint (16)",
            "body": "PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY"
        },
        "PSYS_SRC_PATTERN_DROP": {
            "prefix": "PSYS_SRC_PATTERN_DROP\tint (1)",
            "body": "PSYS_SRC_PATTERN_DROP"
        },
        "PSYS_SRC_PATTERN_EXPLODE": {
            "prefix": "PSYS_SRC_PATTERN_EXPLODE\tint (2)",
            "body": "PSYS_SRC_PATTERN_EXPLODE"
        },
        "PSYS_SRC_TARGET_KEY": {
            "prefix": "PSYS_SRC_TARGET_KEY\tint (20)",
            "body": "PSYS_SRC_TARGET_KEY"
        },
        "PSYS_SRC_TEXTURE": {
            "prefix": "PSYS_SRC_TEXTURE\tint (12)",
            "body": "PSYS_SRC_TEXTURE"
        },
        "PUBLIC_CHANNEL": {
            "prefix": "PUBLIC_CHANNEL\tint (0)",
            "body": "PUBLIC_CHANNEL"
        },
        "PURSUIT_FUZZ_FACTOR": {
            "prefix": "PURSUIT_FUZZ_FACTOR\tint (3)",
            "body": "PURSUIT_FUZZ_FACTOR"
        },
        "PURSUIT_GOAL_TOLERANCE": {
            "prefix": "PURSUIT_GOAL_TOLERANCE\tint (5)",
            "body": "PURSUIT_GOAL_TOLERANCE"
        },
        "PURSUIT_INTERCEPT": {
            "prefix": "PURSUIT_INTERCEPT\tint (4)",
            "body": "PURSUIT_INTERCEPT"
        },
        "PURSUIT_OFFSET": {
            "prefix": "PURSUIT_OFFSET\tint (1)",
            "body": "PURSUIT_OFFSET"
        },
        "PU_EVADE_HIDDEN": {
            "prefix": "PU_EVADE_HIDDEN\tint (7)",
            "body": "PU_EVADE_HIDDEN"
        },
        "PU_EVADE_SPOTTED": {
            "prefix": "PU_EVADE_SPOTTED\tint (8)",
            "body": "PU_EVADE_SPOTTED"
        },
        "PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED": {
            "prefix": "PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED\tint (0xA = 10)",
            "body": "PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED"
        },
        "PU_FAILURE_INVALID_GOAL": {
            "prefix": "PU_FAILURE_INVALID_GOAL\tint (0x3 = 3)",
            "body": "PU_FAILURE_INVALID_GOAL"
        },
        "PU_FAILURE_INVALID_START": {
            "prefix": "PU_FAILURE_INVALID_START\tint (2)",
            "body": "PU_FAILURE_INVALID_START"
        },
        "PU_FAILURE_NO_NAVMESH": {
            "prefix": "PU_FAILURE_NO_NAVMESH\tint (9)",
            "body": "PU_FAILURE_NO_NAVMESH"
        },
        "PU_FAILURE_NO_VALID_DESTINATION": {
            "prefix": "PU_FAILURE_NO_VALID_DESTINATION\tint (6)",
            "body": "PU_FAILURE_NO_VALID_DESTINATION"
        },
        "PU_FAILURE_OTHER": {
            "prefix": "PU_FAILURE_OTHER\tint (1000000)",
            "body": "PU_FAILURE_OTHER"
        },
        "PU_FAILURE_PARCEL_UNREACHABLE": {
            "prefix": "PU_FAILURE_PARCEL_UNREACHABLE\tint (11)",
            "body": "PU_FAILURE_PARCEL_UNREACHABLE"
        },
        "PU_FAILURE_TARGET_GONE": {
            "prefix": "PU_FAILURE_TARGET_GONE\tint (5)",
            "body": "PU_FAILURE_TARGET_GONE"
        },
        "PU_FAILURE_UNREACHABLE": {
            "prefix": "PU_FAILURE_UNREACHABLE\tint (4)",
            "body": "PU_FAILURE_UNREACHABLE"
        },
        "PU_GOAL_REACHED": {
            "prefix": "PU_GOAL_REACHED\tint (1)",
            "body": "PU_GOAL_REACHED"
        },
        "PU_SLOWDOWN_DISTANCE_REACHED": {
            "prefix": "PU_SLOWDOWN_DISTANCE_REACHED\tint (0)",
            "body": "PU_SLOWDOWN_DISTANCE_REACHED"
        },
        "RAD_TO_DEG": {
            "prefix": "RAD_TO_DEG\tfloat (57.29578)",
            "body": "RAD_TO_DEG"
        },
        "RCERR_CAST_TIME_EXCEEDED": {
            "prefix": "RCERR_CAST_TIME_EXCEEDED\tint (-3)",
            "body": "RCERR_CAST_TIME_EXCEEDED"
        },
        "RCERR_SIM_PERF_LOW": {
            "prefix": "RCERR_SIM_PERF_LOW\tint (-2)",
            "body": "RCERR_SIM_PERF_LOW"
        },
        "RCERR_UNKNOWN": {
            "prefix": "RCERR_UNKNOWN\tint (-1)",
            "body": "RCERR_UNKNOWN"
        },
        "RC_DATA_FLAGS": {
            "prefix": "RC_DATA_FLAGS\tint (2)",
            "body": "RC_DATA_FLAGS, ${integer flags}, $0"
        },
        "RC_DETECT_PHANTOM": {
            "prefix": "RC_DETECT_PHANTOM\tint (1)",
            "body": "RC_DETECT_PHANTOM, ${integer dectedPhantom}, $0"
        },
        "RC_GET_LINK_NUM": {
            "prefix": "RC_GET_LINK_NUM\tint (0x4 = 4)",
            "body": "RC_GET_LINK_NUM"
        },
        "RC_GET_NORMAL": {
            "prefix": "RC_GET_NORMAL\tint (0x1 = 1)",
            "body": "RC_GET_NORMAL"
        },
        "RC_GET_ROOT_KEY": {
            "prefix": "RC_GET_ROOT_KEY\tint (0x2 = 2)",
            "body": "RC_GET_ROOT_KEY"
        },
        "RC_MAX_HITS": {
            "prefix": "RC_MAX_HITS\tint (3)",
            "body": "RC_MAX_HITS, ${integer maxHits}, $0"
        },
        "RC_REJECT_AGENTS": {
            "prefix": "RC_REJECT_AGENTS\tint (0x1 = 1)",
            "body": "RC_REJECT_AGENTS"
        },
        "RC_REJECT_LAND": {
            "prefix": "RC_REJECT_LAND\tint (0x8 = 8)",
            "body": "RC_REJECT_LAND"
        },
        "RC_REJECT_NONPHYSICAL": {
            "prefix": "RC_REJECT_NONPHYSICAL\tint (0x4 = 4)",
            "body": "RC_REJECT_NONPHYSICAL"
        },
        "RC_REJECT_PHYSICAL": {
            "prefix": "RC_REJECT_PHYSICAL\tint (0x2 = 2)",
            "body": "RC_REJECT_PHYSICAL"
        },
        "RC_REJECT_TYPES": {
            "prefix": "RC_REJECT_TYPES\tint (0)",
            "body": "RC_REJECT_TYPES, ${integer filterMask}, $0"
        },
        "REGION_FLAG_ALLOW_DAMAGE": {
            "prefix": "REGION_FLAG_ALLOW_DAMAGE\tint (0x1 = 1)",
            "body": "REGION_FLAG_ALLOW_DAMAGE"
        },
        "REGION_FLAG_ALLOW_DIRECT_TELEPORT": {
            "prefix": "REGION_FLAG_ALLOW_DIRECT_TELEPORT\tint (0x100000 = 1048576)",
            "body": "REGION_FLAG_ALLOW_DIRECT_TELEPORT"
        },
        "REGION_FLAG_BLOCK_FLY": {
            "prefix": "REGION_FLAG_BLOCK_FLY\tint (0x80000 = 524288)",
            "body": "REGION_FLAG_BLOCK_FLY"
        },
        "REGION_FLAG_BLOCK_TERRAFORM": {
            "prefix": "REGION_FLAG_BLOCK_TERRAFORM\tint (0x40 = 64)",
            "body": "REGION_FLAG_BLOCK_TERRAFORM"
        },
        "REGION_FLAG_DISABLE_COLLISIONS": {
            "prefix": "REGION_FLAG_DISABLE_COLLISIONS\tint (0x1000 = 4096)",
            "body": "REGION_FLAG_DISABLE_COLLISIONS"
        },
        "REGION_FLAG_DISABLE_PHYSICS": {
            "prefix": "REGION_FLAG_DISABLE_PHYSICS\tint (0x4000 = 16384)",
            "body": "REGION_FLAG_DISABLE_PHYSICS"
        },
        "REGION_FLAG_FIXED_SUN": {
            "prefix": "REGION_FLAG_FIXED_SUN\tint (0x10 = 16)",
            "body": "REGION_FLAG_FIXED_SUN"
        },
        "REGION_FLAG_RESTRICT_PUSHOBJECT": {
            "prefix": "REGION_FLAG_RESTRICT_PUSHOBJECT\tint (0x400000 = 4194304)",
            "body": "REGION_FLAG_RESTRICT_PUSHOBJECT"
        },
        "REGION_FLAG_SANDBOX": {
            "prefix": "REGION_FLAG_SANDBOX\tint (0x100 = 256)",
            "body": "REGION_FLAG_SANDBOX"
        },
        "REMOTE_DATA_CHANNEL": {
            "prefix": "REMOTE_DATA_CHANNEL\tint (1)",
            "body": "REMOTE_DATA_CHANNEL"
        },
        "REMOTE_DATA_REPLY": {
            "prefix": "REMOTE_DATA_REPLY\tint (3)",
            "body": "REMOTE_DATA_REPLY"
        },
        "REMOTE_DATA_REQUEST": {
            "prefix": "REMOTE_DATA_REQUEST\tint (2)",
            "body": "REMOTE_DATA_REQUEST"
        },
        "REQUIRE_LINE_OF_SIGHT": {
            "prefix": "REQUIRE_LINE_OF_SIGHT\tint (2)",
            "body": "REQUIRE_LINE_OF_SIGHT"
        },
        "RESTITUTION": {
            "prefix": "RESTITUTION\tint (0x4 = 4)",
            "body": "RESTITUTION"
        },
        "REVERSE": {
            "prefix": "REVERSE\tint (0x4 = 4)",
            "body": "REVERSE"
        },
        "ROTATE": {
            "prefix": "ROTATE\tint (0x20 = 32)",
            "body": "ROTATE"
        },
        "SCALE": {
            "prefix": "SCALE\tint (0x40 = 64)",
            "body": "SCALE"
        },
        "SCRIPTED": {
            "prefix": "SCRIPTED\tint (0x8 = 8)",
            "body": "SCRIPTED"
        },
        "SIM_STAT_PCT_CHARS_STEPPED": {
            "prefix": "SIM_STAT_PCT_CHARS_STEPPED\tint (0)",
            "body": "SIM_STAT_PCT_CHARS_STEPPED"
        },
        "SMOOTH": {
            "prefix": "SMOOTH\tint (0x10 = 16)",
            "body": "SMOOTH"
        },
        "SQRT2": {
            "prefix": "SQRT2\tfloat (1.414214)",
            "body": "SQRT2"
        },
        "STATUS_BLOCK_GRAB": {
            "prefix": "STATUS_BLOCK_GRAB\tint (0x40 = 64)",
            "body": "STATUS_BLOCK_GRAB"
        },
        "STATUS_BLOCK_GRAB_OBJECT": {
            "prefix": "STATUS_BLOCK_GRAB_OBJECT\tint (0x400 = 1024)",
            "body": "STATUS_BLOCK_GRAB_OBJECT"
        },
        "STATUS_BOUNDS_ERROR": {
            "prefix": "STATUS_BOUNDS_ERROR\tint (1002)",
            "body": "STATUS_BOUNDS_ERROR"
        },
        "STATUS_CAST_SHADOWS": {
            "prefix": "STATUS_CAST_SHADOWS\tint (0x200 = 512)",
            "body": "STATUS_CAST_SHADOWS"
        },
        "STATUS_DIE_AT_EDGE": {
            "prefix": "STATUS_DIE_AT_EDGE\tint (0x80 = 128)",
            "body": "STATUS_DIE_AT_EDGE"
        },
        "STATUS_INTERNAL_ERROR": {
            "prefix": "STATUS_INTERNAL_ERROR\tint (1999)",
            "body": "STATUS_INTERNAL_ERROR"
        },
        "STATUS_MALFORMED_PARAMS": {
            "prefix": "STATUS_MALFORMED_PARAMS\tint (1000)",
            "body": "STATUS_MALFORMED_PARAMS"
        },
        "STATUS_NOT_FOUND": {
            "prefix": "STATUS_NOT_FOUND\tint (1003)",
            "body": "STATUS_NOT_FOUND"
        },
        "STATUS_NOT_SUPPORTED": {
            "prefix": "STATUS_NOT_SUPPORTED\tint (1004)",
            "body": "STATUS_NOT_SUPPORTED"
        },
        "STATUS_OK": {
            "prefix": "STATUS_OK\tint (0)",
            "body": "STATUS_OK"
        },
        "STATUS_PHANTOM": {
            "prefix": "STATUS_PHANTOM\tint (0x10 = 16)",
            "body": "STATUS_PHANTOM"
        },
        "STATUS_PHYSICS": {
            "prefix": "STATUS_PHYSICS\tint (0x1 = 1)",
            "body": "STATUS_PHYSICS"
        },
        "STATUS_RETURN_AT_EDGE": {
            "prefix": "STATUS_RETURN_AT_EDGE\tint (0x100 = 256)",
            "body": "STATUS_RETURN_AT_EDGE"
        },
        "STATUS_ROTATE_X": {
            "prefix": "STATUS_ROTATE_X\tint (0x2 = 2)",
            "body": "STATUS_ROTATE_X"
        },
        "STATUS_ROTATE_Y": {
            "prefix": "STATUS_ROTATE_Y\tint (0x4 = 4)",
            "body": "STATUS_ROTATE_Y"
        },
        "STATUS_ROTATE_Z": {
            "prefix": "STATUS_ROTATE_Z\tint (0x8 = 8)",
            "body": "STATUS_ROTATE_Z"
        },
        "STATUS_SANDBOX": {
            "prefix": "STATUS_SANDBOX\tint (0x20 = 32)",
            "body": "STATUS_SANDBOX"
        },
        "STATUS_TYPE_MISMATCH": {
            "prefix": "STATUS_TYPE_MISMATCH\tint (1001)",
            "body": "STATUS_TYPE_MISMATCH"
        },
        "STATUS_WHITELIST_FAILED": {
            "prefix": "STATUS_WHITELIST_FAILED\tint (2001)",
            "body": "STATUS_WHITELIST_FAILED"
        },
        "STRING_TRIM": {
            "prefix": "STRING_TRIM\tint (3)",
            "body": "STRING_TRIM"
        },
        "STRING_TRIM_HEAD": {
            "prefix": "STRING_TRIM_HEAD\tint (1)",
            "body": "STRING_TRIM_HEAD"
        },
        "STRING_TRIM_TAIL": {
            "prefix": "STRING_TRIM_TAIL\tint (2)",
            "body": "STRING_TRIM_TAIL"
        },
        "TEXTURE_BLANK": {
            "prefix": "TEXTURE_BLANK\tstr (\"5748decc-f629-461c-9a36-a35a221fe21f\")",
            "body": "TEXTURE_BLANK"
        },
        "TEXTURE_DEFAULT": {
            "prefix": "TEXTURE_DEFAULT\tstr (\"89556747-24cb-43ed-920b-47caed15465f\" = TEXTURE_PLYWOOD)",
            "body": "TEXTURE_DEFAULT"
        },
        "TEXTURE_MEDIA": {
            "prefix": "TEXTURE_MEDIA\tstr (\"8b5fec65-8d8d-9dc5-cda8-8fdf2716e361\")",
            "body": "TEXTURE_MEDIA"
        },
        "TEXTURE_PLYWOOD": {
            "prefix": "TEXTURE_PLYWOOD\tstr (\"89556747-24cb-43ed-920b-47caed15465f\" = TEXTURE_DEFAULT)",
            "body": "TEXTURE_PLYWOOD"
        },
        "TEXTURE_TRANSPARENT": {
            "prefix": "TEXTURE_TRANSPARENT\tstr (\"8dcd4a48-2d37-4909-9f78-f7a9eb4ef903\")",
            "body": "TEXTURE_TRANSPARENT"
        },
        "TOUCH_INVALID_FACE": {
            "prefix": "TOUCH_INVALID_FACE\tint (-1)",
            "body": "TOUCH_INVALID_FACE"
        },
        "TOUCH_INVALID_TEXCOORD": {
            "prefix": "TOUCH_INVALID_TEXCOORD\tvect (<-1.0, -1.0, 0.0>)",
            "body": "TOUCH_INVALID_TEXCOORD"
        },
        "TOUCH_INVALID_VECTOR": {
            "prefix": "TOUCH_INVALID_VECTOR\tvect (<0.0, 0.0, 0.0>)",
            "body": "TOUCH_INVALID_VECTOR"
        },
        "TRAVERSAL_TYPE": {
            "prefix": "TRAVERSAL_TYPE\tint (7)",
            "body": "TRAVERSAL_TYPE"
        },
        "TRAVERSAL_TYPE_FAST": {
            "prefix": "TRAVERSAL_TYPE_FAST\tint (1)",
            "body": "TRAVERSAL_TYPE_FAST"
        },
        "TRAVERSAL_TYPE_NONE": {
            "prefix": "TRAVERSAL_TYPE_NONE\tint (2)",
            "body": "TRAVERSAL_TYPE_NONE"
        },
        "TRAVERSAL_TYPE_SLOW": {
            "prefix": "TRAVERSAL_TYPE_SLOW\tint (0)",
            "body": "TRAVERSAL_TYPE_SLOW"
        },
        "TRUE": {
            "prefix": "TRUE\tint bool (1)",
            "body": "TRUE"
        },
        "TWO_PI": {
            "prefix": "TWO_PI\tfloat (6.283185)",
            "body": "TWO_PI"
        },
        "TYPE_FLOAT": {
            "prefix": "TYPE_FLOAT\tint (2)",
            "body": "TYPE_FLOAT"
        },
        "TYPE_INTEGER": {
            "prefix": "TYPE_INTEGER\tint (1)",
            "body": "TYPE_INTEGER"
        },
        "TYPE_INVALID": {
            "prefix": "TYPE_INVALID\tint (0)",
            "body": "TYPE_INVALID"
        },
        "TYPE_KEY": {
            "prefix": "TYPE_KEY\tint (4)",
            "body": "TYPE_KEY"
        },
        "TYPE_ROTATION": {
            "prefix": "TYPE_ROTATION\tint (6)",
            "body": "TYPE_ROTATION"
        },
        "TYPE_STRING": {
            "prefix": "TYPE_STRING\tint (3)",
            "body": "TYPE_STRING"
        },
        "TYPE_VECTOR": {
            "prefix": "TYPE_VECTOR\tint (5)",
            "body": "TYPE_VECTOR"
        },
        "URL_REQUEST_DENIED": {
            "prefix": "URL_REQUEST_DENIED\tstr (\"URL_REQUEST_DENIED\")",
            "body": "URL_REQUEST_DENIED"
        },
        "URL_REQUEST_GRANTED": {
            "prefix": "URL_REQUEST_GRANTED\tstr (\"URL_REQUEST_GRANTED\")",
            "body": "URL_REQUEST_GRANTED"
        },
        "VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY": {
            "prefix": "VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY\tint (32)",
            "body": "VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY"
        },
        "VEHICLE_ANGULAR_DEFLECTION_TIMESCALE": {
            "prefix": "VEHICLE_ANGULAR_DEFLECTION_TIMESCALE\tint (33)",
            "body": "VEHICLE_ANGULAR_DEFLECTION_TIMESCALE"
        },
        "VEHICLE_ANGULAR_FRICTION_TIMESCALE": {
            "prefix": "VEHICLE_ANGULAR_FRICTION_TIMESCALE\tint (17)",
            "body": "VEHICLE_ANGULAR_FRICTION_TIMESCALE"
        },
        "VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE": {
            "prefix": "VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE\tint (35)",
            "body": "VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE"
        },
        "VEHICLE_ANGULAR_MOTOR_DIRECTION": {
            "prefix": "VEHICLE_ANGULAR_MOTOR_DIRECTION\tint (19)",
            "body": "VEHICLE_ANGULAR_MOTOR_DIRECTION"
        },
        "VEHICLE_ANGULAR_MOTOR_TIMESCALE": {
            "prefix": "VEHICLE_ANGULAR_MOTOR_TIMESCALE\tint (34)",
            "body": "VEHICLE_ANGULAR_MOTOR_TIMESCALE"
        },
        "VEHICLE_BANKING_EFFICIENCY": {
            "prefix": "VEHICLE_BANKING_EFFICIENCY\tint (38)",
            "body": "VEHICLE_BANKING_EFFICIENCY"
        },
        "VEHICLE_BANKING_MIX": {
            "prefix": "VEHICLE_BANKING_MIX\tint (39)",
            "body": "VEHICLE_BANKING_MIX"
        },
        "VEHICLE_BANKING_TIMESCALE": {
            "prefix": "VEHICLE_BANKING_TIMESCALE\tint (40)",
            "body": "VEHICLE_BANKING_TIMESCALE"
        },
        "VEHICLE_BUOYANCY": {
            "prefix": "VEHICLE_BUOYANCY\tint (27)",
            "body": "VEHICLE_BUOYANCY"
        },
        "VEHICLE_FLAG_CAMERA_DECOUPLED": {
            "prefix": "VEHICLE_FLAG_CAMERA_DECOUPLED\tint (0x200 = 512)",
            "body": "VEHICLE_FLAG_CAMERA_DECOUPLED"
        },
        "VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT": {
            "prefix": "VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT\tint (0x10 = 16)",
            "body": "VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT"
        },
        "VEHICLE_FLAG_HOVER_TERRAIN_ONLY": {
            "prefix": "VEHICLE_FLAG_HOVER_TERRAIN_ONLY\tint (0x8 = 8)",
            "body": "VEHICLE_FLAG_HOVER_TERRAIN_ONLY"
        },
        "VEHICLE_FLAG_HOVER_UP_ONLY": {
            "prefix": "VEHICLE_FLAG_HOVER_UP_ONLY\tint (0x20 = 32)",
            "body": "VEHICLE_FLAG_HOVER_UP_ONLY"
        },
        "VEHICLE_FLAG_HOVER_WATER_ONLY": {
            "prefix": "VEHICLE_FLAG_HOVER_WATER_ONLY\tint (0x4 = 4)",
            "body": "VEHICLE_FLAG_HOVER_WATER_ONLY"
        },
        "VEHICLE_FLAG_LIMIT_MOTOR_UP": {
            "prefix": "VEHICLE_FLAG_LIMIT_MOTOR_UP\tint (0x40 = 64)",
            "body": "VEHICLE_FLAG_LIMIT_MOTOR_UP"
        },
        "VEHICLE_FLAG_LIMIT_ROLL_ONLY": {
            "prefix": "VEHICLE_FLAG_LIMIT_ROLL_ONLY\tint (0x2 = 2)",
            "body": "VEHICLE_FLAG_LIMIT_ROLL_ONLY"
        },
        "VEHICLE_FLAG_MOUSELOOK_BANK": {
            "prefix": "VEHICLE_FLAG_MOUSELOOK_BANK\tint (0x100 = 256)",
            "body": "VEHICLE_FLAG_MOUSELOOK_BANK"
        },
        "VEHICLE_FLAG_MOUSELOOK_STEER": {
            "prefix": "VEHICLE_FLAG_MOUSELOOK_STEER\tint (0x80 = 128)",
            "body": "VEHICLE_FLAG_MOUSELOOK_STEER"
        },
        "VEHICLE_FLAG_NO_DEFLECTION_UP": {
            "prefix": "VEHICLE_FLAG_NO_DEFLECTION_UP\tint (0x1 = 1)",
            "body": "VEHICLE_FLAG_NO_DEFLECTION_UP"
        },
        "VEHICLE_HOVER_EFFICIENCY": {
            "prefix": "VEHICLE_HOVER_EFFICIENCY\tint (25)",
            "body": "VEHICLE_HOVER_EFFICIENCY"
        },
        "VEHICLE_HOVER_HEIGHT": {
            "prefix": "VEHICLE_HOVER_HEIGHT\tint (24)",
            "body": "VEHICLE_HOVER_HEIGHT"
        },
        "VEHICLE_HOVER_TIMESCALE": {
            "prefix": "VEHICLE_HOVER_TIMESCALE\tint (26)",
            "body": "VEHICLE_HOVER_TIMESCALE"
        },
        "VEHICLE_LINEAR_DEFLECTION_EFFICIENCY": {
            "prefix": "VEHICLE_LINEAR_DEFLECTION_EFFICIENCY\tint (28)",
            "body": "VEHICLE_LINEAR_DEFLECTION_EFFICIENCY"
        },
        "VEHICLE_LINEAR_DEFLECTION_TIMESCALE": {
            "prefix": "VEHICLE_LINEAR_DEFLECTION_TIMESCALE\tint (29)",
            "body": "VEHICLE_LINEAR_DEFLECTION_TIMESCALE"
        },
        "VEHICLE_LINEAR_FRICTION_TIMESCALE": {
            "prefix": "VEHICLE_LINEAR_FRICTION_TIMESCALE\tint (16)",
            "body": "VEHICLE_LINEAR_FRICTION_TIMESCALE"
        },
        "VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE": {
            "prefix": "VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE\tint (31)",
            "body": "VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE"
        },
        "VEHICLE_LINEAR_MOTOR_DIRECTION": {
            "prefix": "VEHICLE_LINEAR_MOTOR_DIRECTION\tint (18)",
            "body": "VEHICLE_LINEAR_MOTOR_DIRECTION"
        },
        "VEHICLE_LINEAR_MOTOR_OFFSET": {
            "prefix": "VEHICLE_LINEAR_MOTOR_OFFSET\tint (20)",
            "body": "VEHICLE_LINEAR_MOTOR_OFFSET"
        },
        "VEHICLE_LINEAR_MOTOR_TIMESCALE": {
            "prefix": "VEHICLE_LINEAR_MOTOR_TIMESCALE\tint (30)",
            "body": "VEHICLE_LINEAR_MOTOR_TIMESCALE"
        },
        "VEHICLE_REFERENCE_FRAME": {
            "prefix": "VEHICLE_REFERENCE_FRAME\tint (44)",
            "body": "VEHICLE_REFERENCE_FRAME"
        },
        "VEHICLE_TYPE_AIRPLANE": {
            "prefix": "VEHICLE_TYPE_AIRPLANE\tint (4)",
            "body": "VEHICLE_TYPE_AIRPLANE"
        },
        "VEHICLE_TYPE_BALLOON": {
            "prefix": "VEHICLE_TYPE_BALLOON\tint (5)",
            "body": "VEHICLE_TYPE_BALLOON"
        },
        "VEHICLE_TYPE_BOAT": {
            "prefix": "VEHICLE_TYPE_BOAT\tint (3)",
            "body": "VEHICLE_TYPE_BOAT"
        },
        "VEHICLE_TYPE_CAR": {
            "prefix": "VEHICLE_TYPE_CAR\tint (2)",
            "body": "VEHICLE_TYPE_CAR"
        },
        "VEHICLE_TYPE_NONE": {
            "prefix": "VEHICLE_TYPE_NONE\tint (0)",
            "body": "VEHICLE_TYPE_NONE"
        },
        "VEHICLE_TYPE_SLED": {
            "prefix": "VEHICLE_TYPE_SLED\tint (1)",
            "body": "VEHICLE_TYPE_SLED"
        },
        "VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY": {
            "prefix": "VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY\tint (36)",
            "body": "VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY"
        },
        "VEHICLE_VERTICAL_ATTRACTION_TIMESCALE": {
            "prefix": "VEHICLE_VERTICAL_ATTRACTION_TIMESCALE\tint (37)",
            "body": "VEHICLE_VERTICAL_ATTRACTION_TIMESCALE"
        },
        "VERTICAL": {
            "prefix": "VERTICAL\tint (0)",
            "body": "VERTICAL"
        },
        "WANDER_PAUSE_AT_WAYPOINTS": {
            "prefix": "WANDER_PAUSE_AT_WAYPOINTS\tint (0)",
            "body": "WANDER_PAUSE_AT_WAYPOINTS"
        },
        "XP_ERROR_EXPERIENCES_DISABLED": {
            "prefix": "XP_ERROR_EXPERIENCES_DISABLED\tint (2)",
            "body": "XP_ERROR_EXPERIENCES_DISABLED"
        },
        "XP_ERROR_EXPERIENCE_DISABLED": {
            "prefix": "XP_ERROR_EXPERIENCE_DISABLED\tint (8)",
            "body": "XP_ERROR_EXPERIENCE_DISABLED"
        },
        "XP_ERROR_EXPERIENCE_SUSPENDED": {
            "prefix": "XP_ERROR_EXPERIENCE_SUSPENDED\tint (9)",
            "body": "XP_ERROR_EXPERIENCE_SUSPENDED"
        },
        "XP_ERROR_INVALID_EXPERIENCE": {
            "prefix": "XP_ERROR_INVALID_EXPERIENCE\tint (7)",
            "body": "XP_ERROR_INVALID_EXPERIENCE"
        },
        "XP_ERROR_INVALID_PARAMETERS": {
            "prefix": "XP_ERROR_INVALID_PARAMETERS\tint (3)",
            "body": "XP_ERROR_INVALID_PARAMETERS"
        },
        "XP_ERROR_KEY_NOT_FOUND": {
            "prefix": "XP_ERROR_KEY_NOT_FOUND\tint (14)",
            "body": "XP_ERROR_KEY_NOT_FOUND"
        },
        "XP_ERROR_MATURITY_EXCEEDED": {
            "prefix": "XP_ERROR_MATURITY_EXCEEDED\tint (16)",
            "body": "XP_ERROR_MATURITY_EXCEEDED"
        },
        "XP_ERROR_NONE": {
            "prefix": "XP_ERROR_NONE\tint (0)",
            "body": "XP_ERROR_NONE"
        },
        "XP_ERROR_NOT_FOUND": {
            "prefix": "XP_ERROR_NOT_FOUND\tint (6)",
            "body": "XP_ERROR_NOT_FOUND"
        },
        "XP_ERROR_NOT_PERMITTED": {
            "prefix": "XP_ERROR_NOT_PERMITTED\tint (4)",
            "body": "XP_ERROR_NOT_PERMITTED"
        },
        "XP_ERROR_NOT_PERMITTED_LAND": {
            "prefix": "XP_ERROR_NOT_PERMITTED_LAND\tint (17)",
            "body": "XP_ERROR_NOT_PERMITTED_LAND"
        },
        "XP_ERROR_NO_EXPERIENCE": {
            "prefix": "XP_ERROR_NO_EXPERIENCE\tint (5)",
            "body": "XP_ERROR_NO_EXPERIENCE"
        },
        "XP_ERROR_QUOTA_EXCEEDED": {
            "prefix": "XP_ERROR_QUOTA_EXCEEDED\tint (11)",
            "body": "XP_ERROR_QUOTA_EXCEEDED"
        },
        "XP_ERROR_RETRY_UPDATE": {
            "prefix": "XP_ERROR_RETRY_UPDATE\tint (15)",
            "body": "XP_ERROR_RETRY_UPDATE"
        },
        "XP_ERROR_STORAGE_EXCEPTION": {
            "prefix": "XP_ERROR_STORAGE_EXCEPTION\tint (13)",
            "body": "XP_ERROR_STORAGE_EXCEPTION"
        },
        "XP_ERROR_STORE_DISABLED": {
            "prefix": "XP_ERROR_STORE_DISABLED\tint (12)",
            "body": "XP_ERROR_STORE_DISABLED"
        },
        "XP_ERROR_THROTTLED": {
            "prefix": "XP_ERROR_THROTTLED\tint (1)",
            "body": "XP_ERROR_THROTTLED"
        },
        "XP_ERROR_UNKNOWN_ERROR": {
            "prefix": "XP_ERROR_UNKNOWN_ERROR\tint (10)",
            "body": "XP_ERROR_UNKNOWN_ERROR"
        },
        "ZERO_ROTATION": {
            "prefix": "ZERO_ROTATION\trot (<0.0, 0.0, 0.0, 1.0>)",
            "body": "ZERO_ROTATION"
        },
        "ZERO_VECTOR": {
            "prefix": "ZERO_VECTOR\tvect (<0.0, 0.0, 0.0>)",
            "body": "ZERO_VECTOR"
        },
//  functions
        "llAbs": {
            "prefix": "llAbs\t(int) func",
            "body": "llAbs(${integer val})"
        },
        "llAcos": {
            "prefix": "llAcos\t(float) func",
            "body": "llAcos(${float val})"
        },
        "llAddToLandBanList": {
            "prefix": "llAddToLandBanList\t(void) func",
            "body": "llAddToLandBanList(${key avatar}, ${float hours});\n$0"
        },
        "llAddToLandPassList": {
            "prefix": "llAddToLandPassList\t(void) func",
            "body": "llAddToLandPassList(${key avatar}, ${float hours});\n$0"
        },
        "llAdjustSoundVolume": {
            "prefix": "llAdjustSoundVolume\t(void) func",
            "body": "llAdjustSoundVolume(${float volume});\n$0"
        },
        "llAgentInExperience": {
            "prefix": "llAgentInExperience\t(int) func",
            "body": "llAgentInExperience(${key agent})"
        },
        "llAllowInventoryDrop": {
            "prefix": "llAllowInventoryDrop\t(void) func",
            "body": "llAllowInventoryDrop(${integer add});\n$0"
        },
        "llAngleBetween": {
            "prefix": "llAngleBetween\t(float) func",
            "body": "llAngleBetween(${rotation a}, ${rotation b})"
        },
        "llApplyImpulse": {
            "prefix": "llApplyImpulse\t(void) func",
            "body": "llApplyImpulse(${vector force}, ${integer local});\n$0"
        },
        "llApplyRotationalImpulse": {
            "prefix": "llApplyRotationalImpulse\t(void) func",
            "body": "llApplyRotationalImpulse(${vector force}, ${integer local});\n$0"
        },
        "llAsin": {
            "prefix": "llAsin\t(float) func",
            "body": "llAsin(${float val})"
        },
        "llAtan2": {
            "prefix": "llAtan2\t(float) func",
            "body": "llAtan2(${float y}, ${float x})"
        },
        "llAttachToAvatar": {
            "prefix": "llAttachToAvatar\t(void) func",
            "body": "llAttachToAvatar(${integer attach_point});\n$0"
        },
        "llAttachToAvatarTemp": {
            "prefix": "llAttachToAvatarTemp\t(void) func",
            "body": "llAttachToAvatarTemp(${integer attach_point});\n$0"
        },
        "llAvatarOnLinkSitTarget": {
            "prefix": "llAvatarOnLinkSitTarget\t(key) func",
            "body": "llAvatarOnLinkSitTarget(${integer link})"
        },
        "llAvatarOnSitTarget": {
            "prefix": "llAvatarOnSitTarget\t(key) func",
            "body": "llAvatarOnSitTarget()"
        },
        "llAxes2Rot": {
            "prefix": "llAxes2Rot\t(rot) func",
            "body": "llAxes2Rot(${vector fwd}, ${vector left}, ${vector up})"
        },
        "llAxisAngle2Rot": {
            "prefix": "llAxisAngle2Rot\t(rot) func",
            "body": "llAxisAngle2Rot(${vector axis}, ${float angle})"
        },
        "llBase64ToInteger": {
            "prefix": "llBase64ToInteger\t(int) func",
            "body": "llBase64ToInteger(${string str})"
        },
        "llBase64ToString": {
            "prefix": "llBase64ToString\t(str) func",
            "body": "llBase64ToString(${string str})"
        },
        "llBreakAllLinks": {
            "prefix": "llBreakAllLinks\t(void) func",
            "body": "llBreakAllLinks();\n$0"
        },
        "llBreakLink": {
            "prefix": "llBreakLink\t(void) func",
            "body": "llBreakLink(${integer linknum});\n$0"
        },
        "llCSV2List": {
            "prefix": "llCSV2List\t(list) func",
            "body": "llCSV2List(${string src})"
        },
        "llCastRay": {
            "prefix": "llCastRay\t(list) func",
            "body": "llCastRay(${vector start}, ${vector end}, ${list params})"
        },
        "llCeil": {
            "prefix": "llCeil\t(int) func",
            "body": "llCeil(${float val})"
        },
        "llClearCameraParams": {
            "prefix": "llClearCameraParams\t(void) func",
            "body": "llClearCameraParams();\n$0"
        },
        "llClearLinkMedia": {
            "prefix": "llClearLinkMedia\t(int) func",
            "body": "llClearLinkMedia(${integer link}, ${integer face})"
        },
        "llClearPrimMedia": {
            "prefix": "llClearPrimMedia\t(int) func",
            "body": "llClearPrimMedia(${integer face})"
        },
        "llCloseRemoteDataChannel": {
            "prefix": "llCloseRemoteDataChannel\t(void) func",
            "body": "llCloseRemoteDataChannel(${key channel});\n$0"
        },
        "llCollisionFilter": {
            "prefix": "llCollisionFilter\t(void) func",
            "body": "llCollisionFilter(${string name}, ${key id}, ${integer accept});\n$0"
        },
        "llCollisionSound": {
            "prefix": "llCollisionSound\t(void) func",
            "body": "llCollisionSound(${string impact_sound}, ${float impact_volume});\n$0"
        },
        "llCos": {
            "prefix": "llCos\t(float) func",
            "body": "llCos(${float theta})"
        },
        "llCreateCharacter": {
            "prefix": "llCreateCharacter\t(void) func",
            "body": "llCreateCharacter(${list options});\n$0"
        },
        "llCreateKeyValue": {
            "prefix": "llCreateKeyValue\t(key) func",
            "body": "llCreateKeyValue(${string k}, ${string v})"
        },
        "llCreateLink": {
            "prefix": "llCreateLink\t(void) func",
            "body": "llCreateLink(${key target}, ${integer parent});\n$0"
        },
        "llDataSizeKeyValue": {
            "prefix": "llDataSizeKeyValue\t(key) func",
            "body": "llDataSizeKeyValue()"
        },
        "llDeleteCharacter": {
            "prefix": "llDeleteCharacter\t(void) func",
            "body": "llDeleteCharacter();\n$0"
        },
        "llDeleteKeyValue": {
            "prefix": "llDeleteKeyValue\t(key) func",
            "body": "llDeleteKeyValue(${string k})"
        },
        "llDeleteSubList": {
            "prefix": "llDeleteSubList\t(list) func",
            "body": "llDeleteSubList(${list src}, ${integer start}, ${integer end})"
        },
        "llDeleteSubString": {
            "prefix": "llDeleteSubString\t(str) func",
            "body": "llDeleteSubString(${string src}, ${integer start}, ${integer end})"
        },
        "llDetachFromAvatar": {
            "prefix": "llDetachFromAvatar\t(void) func",
            "body": "llDetachFromAvatar();\n$0"
        },
        "llDetectedGrab": {
            "prefix": "llDetectedGrab\t(vec) func",
            "body": "llDetectedGrab(${integer number})"
        },
        "llDetectedGroup": {
            "prefix": "llDetectedGroup\t(int) func",
            "body": "llDetectedGroup(${integer number})"
        },
        "llDetectedKey": {
            "prefix": "llDetectedKey\t(key) func",
            "body": "llDetectedKey(${integer number})"
        },
        "llDetectedLinkNumber": {
            "prefix": "llDetectedLinkNumber\t(int) func",
            "body": "llDetectedLinkNumber(${integer number})"
        },
        "llDetectedName": {
            "prefix": "llDetectedName\t(str) func",
            "body": "llDetectedName(${integer number})"
        },
        "llDetectedOwner": {
            "prefix": "llDetectedOwner\t(key) func",
            "body": "llDetectedOwner(${integer number})"
        },
        "llDetectedPos": {
            "prefix": "llDetectedPos\t(vec) func",
            "body": "llDetectedPos(${integer number})"
        },
        "llDetectedRot": {
            "prefix": "llDetectedRot\t(rot) func",
            "body": "llDetectedRot(${integer number})"
        },
        "llDetectedTouchBinormal": {
            "prefix": "llDetectedTouchBinormal\t(vec) func",
            "body": "llDetectedTouchBinormal(${integer index})"
        },
        "llDetectedTouchFace": {
            "prefix": "llDetectedTouchFace\t(int) func",
            "body": "llDetectedTouchFace(${integer index})"
        },
        "llDetectedTouchNormal": {
            "prefix": "llDetectedTouchNormal\t(vec) func",
            "body": "llDetectedTouchNormal(${integer index})"
        },
        "llDetectedTouchPos": {
            "prefix": "llDetectedTouchPos\t(vec) func",
            "body": "llDetectedTouchPos(${integer index})"
        },
        "llDetectedTouchST": {
            "prefix": "llDetectedTouchST\t(vec) func",
            "body": "llDetectedTouchST(${integer index})"
        },
        "llDetectedTouchUV": {
            "prefix": "llDetectedTouchUV\t(vec) func",
            "body": "llDetectedTouchUV(${integer index})"
        },
        "llDetectedType": {
            "prefix": "llDetectedType\t(int) func",
            "body": "llDetectedType(${integer number})"
        },
        "llDetectedVel": {
            "prefix": "llDetectedVel\t(vec) func",
            "body": "llDetectedVel(${integer number})"
        },
        "llDialog": {
            "prefix": "llDialog\t(void) func",
            "body": "llDialog(${key avatar}, ${string message}, ${list buttons}, ${integer chat_channel});\n$0"
        },
        "llDie": {
            "prefix": "llDie\t(void) func",
            "body": "llDie();\n$0"
        },
        "llDumpList2String": {
            "prefix": "llDumpList2String\t(str) func",
            "body": "llDumpList2String(${list src}, ${string separator})"
        },
        "llEdgeOfWorld": {
            "prefix": "llEdgeOfWorld\t(int) func",
            "body": "llEdgeOfWorld(${vector pos}, ${vector dir})"
        },
        "llEjectFromLand": {
            "prefix": "llEjectFromLand\t(void) func",
            "body": "llEjectFromLand(${key avatar});\n$0"
        },
        "llEmail": {
            "prefix": "llEmail\t(void) func",
            "body": "llEmail(${string address}, ${string subject}, ${string message});\n$0"
        },
        "llEscapeURL": {
            "prefix": "llEscapeURL\t(str) func",
            "body": "llEscapeURL(${string url})"
        },
        "llEuler2Rot": {
            "prefix": "llEuler2Rot\t(rot) func",
            "body": "llEuler2Rot(${vector v})"
        },
        "llEvade": {
            "prefix": "llEvade\t(void) func",
            "body": "llEvade(${key target}, ${list options});\n$0"
        },
        "llExecCharacterCmd": {
            "prefix": "llExecCharacterCmd\t(void) func",
            "body": "llExecCharacterCmd(${integer cmd}, ${list options});\n$0"
        },
        "llFabs": {
            "prefix": "llFabs\t(float) func",
            "body": "llFabs(${float val})"
        },
        "llFleeFrom": {
            "prefix": "llFleeFrom\t(void) func",
            "body": "llFleeFrom(${vector source}, ${float radius}, ${list options});\n$0"
        },
        "llFloor": {
            "prefix": "llFloor\t(int) func",
            "body": "llFloor(${float val})"
        },
        "llForceMouselook": {
            "prefix": "llForceMouselook\t(void) func",
            "body": "llForceMouselook(${integer mouselook});\n$0"
        },
        "llFrand": {
            "prefix": "llFrand\t(float) func",
            "body": "llFrand(${float mag})"
        },
        "llGenerateKey": {
            "prefix": "llGenerateKey\t(key) func",
            "body": "llGenerateKey()"
        },
        "llGetAccel": {
            "prefix": "llGetAccel\t(vec) func",
            "body": "llGetAccel()"
        },
        "llGetAgentInfo": {
            "prefix": "llGetAgentInfo\t(int) func",
            "body": "llGetAgentInfo(${key id})"
        },
        "llGetAgentLanguage": {
            "prefix": "llGetAgentLanguage\t(str) func",
            "body": "llGetAgentLanguage(${key avatar})"
        },
        "llGetAgentList": {
            "prefix": "llGetAgentList\t(list) func",
            "body": "llGetAgentList(${integer scope}, ${list options})"
        },
        "llGetAgentSize": {
            "prefix": "llGetAgentSize\t(vec) func",
            "body": "llGetAgentSize(${key id})"
        },
        "llGetAlpha": {
            "prefix": "llGetAlpha\t(float) func",
            "body": "llGetAlpha(${integer face})"
        },
        "llGetAndResetTime": {
            "prefix": "llGetAndResetTime\t(float) func",
            "body": "llGetAndResetTime()"
        },
        "llGetAnimation": {
            "prefix": "llGetAnimation\t(str) func",
            "body": "llGetAnimation(${key id})"
        },
        "llGetAnimationList": {
            "prefix": "llGetAnimationList\t(list) func",
            "body": "llGetAnimationList(${key id})"
        },
        "llGetAnimationOverride": {
            "prefix": "llGetAnimationOverride\t(str) func",
            "body": "llGetAnimationOverride(${string anim_state})"
        },
        "llGetAttached": {
            "prefix": "llGetAttached\t(int) func",
            "body": "llGetAttached()"
        },
        "llGetAttachedList": {
            "prefix": "llGetAttachedList\t(list) func",
            "body": "llGetAttachedList(${key id})"
        },
        "llGetBoundingBox": {
            "prefix": "llGetBoundingBox\t(list) func",
            "body": "llGetBoundingBox(${key object})"
        },
        "llGetCameraPos": {
            "prefix": "llGetCameraPos\t(vec) func",
            "body": "llGetCameraPos()"
        },
        "llGetCameraRot": {
            "prefix": "llGetCameraRot\t(rot) func",
            "body": "llGetCameraRot()"
        },
        "llGetCenterOfMass": {
            "prefix": "llGetCenterOfMass\t(vec) func",
            "body": "llGetCenterOfMass()"
        },
        "llGetClosestNavPoint": {
            "prefix": "llGetClosestNavPoint\t(list) func",
            "body": "llGetClosestNavPoint(${vector point}, ${list options})"
        },
        "llGetColor": {
            "prefix": "llGetColor\t(vec) func",
            "body": "llGetColor(${integer face})"
        },
        "llGetCreator": {
            "prefix": "llGetCreator\t(key) func",
            "body": "llGetCreator()"
        },
        "llGetDate": {
            "prefix": "llGetDate\t(str) func",
            "body": "llGetDate()"
        },
        "llGetDisplayName": {
            "prefix": "llGetDisplayName\t(str) func",
            "body": "llGetDisplayName(${key id})"
        },
        "llGetEnergy": {
            "prefix": "llGetEnergy\t(float) func",
            "body": "llGetEnergy()"
        },
        "llGetEnv": {
            "prefix": "llGetEnv\t(str) func",
            "body": "llGetEnv(${string name})"
        },
        "llGetExperienceDetails": {
            "prefix": "llGetExperienceDetails\t(list) func",
            "body": "llGetExperienceDetails(${key experience_id})"
        },
        "llGetExperienceErrorMessage": {
            "prefix": "llGetExperienceErrorMessage\t(str) func",
            "body": "llGetExperienceErrorMessage(${integer error})"
        },
        "llGetForce": {
            "prefix": "llGetForce\t(vec) func",
            "body": "llGetForce()"
        },
        "llGetFreeMemory": {
            "prefix": "llGetFreeMemory\t(int) func",
            "body": "llGetFreeMemory()"
        },
        "llGetFreeURLs": {
            "prefix": "llGetFreeURLs\t(int) func",
            "body": "llGetFreeURLs()"
        },
        "llGetGMTclock": {
            "prefix": "llGetGMTclock\t(float) func",
            "body": "llGetGMTclock()"
        },
        "llGetGeometricCenter": {
            "prefix": "llGetGeometricCenter\t(vec) func",
            "body": "llGetGeometricCenter()"
        },
        "llGetHTTPHeader": {
            "prefix": "llGetHTTPHeader\t(str) func",
            "body": "llGetHTTPHeader(${key request_id}, ${string header})"
        },
        "llGetInventoryCreator": {
            "prefix": "llGetInventoryCreator\t(key) func",
            "body": "llGetInventoryCreator(${string item})"
        },
        "llGetInventoryKey": {
            "prefix": "llGetInventoryKey\t(key) func",
            "body": "llGetInventoryKey(${string name})"
        },
        "llGetInventoryName": {
            "prefix": "llGetInventoryName\t(str) func",
            "body": "llGetInventoryName(${integer type}, ${integer number})"
        },
        "llGetInventoryNumber": {
            "prefix": "llGetInventoryNumber\t(int) func",
            "body": "llGetInventoryNumber(${integer type})"
        },
        "llGetInventoryPermMask": {
            "prefix": "llGetInventoryPermMask\t(int) func",
            "body": "llGetInventoryPermMask(${string item}, ${integer mask})"
        },
        "llGetInventoryType": {
            "prefix": "llGetInventoryType\t(int) func",
            "body": "llGetInventoryType(${string name})"
        },
        "llGetKey": {
            "prefix": "llGetKey\t(key) func",
            "body": "llGetKey()"
        },
        "llGetLandOwnerAt": {
            "prefix": "llGetLandOwnerAt\t(key) func",
            "body": "llGetLandOwnerAt(${vector pos})"
        },
        "llGetLinkKey": {
            "prefix": "llGetLinkKey\t(key) func",
            "body": "llGetLinkKey(${integer linknumber})"
        },
        "llGetLinkMedia": {
            "prefix": "llGetLinkMedia\t(list) func",
            "body": "llGetLinkMedia(${integer link}, ${integer face}, ${list params})"
        },
        "llGetLinkName": {
            "prefix": "llGetLinkName\t(str) func",
            "body": "llGetLinkName(${integer linknumber})"
        },
        "llGetLinkNumber": {
            "prefix": "llGetLinkNumber\t(int) func",
            "body": "llGetLinkNumber()"
        },
        "llGetLinkNumberOfSides": {
            "prefix": "llGetLinkNumberOfSides\t(int) func",
            "body": "llGetLinkNumberOfSides(${integer link})"
        },
        "llGetLinkPrimitiveParams": {
            "prefix": "llGetLinkPrimitiveParams\t(list) func",
            "body": "llGetLinkPrimitiveParams(${integer linknumber}, ${list rules})"
        },
        "llGetListEntryType": {
            "prefix": "llGetListEntryType\t(int) func",
            "body": "llGetListEntryType(${list src}, ${integer index})"
        },
        "llGetListLength": {
            "prefix": "llGetListLength\t(int) func",
            "body": "llGetListLength(${list src})"
        },
        "llGetLocalPos": {
            "prefix": "llGetLocalPos\t(vec) func",
            "body": "llGetLocalPos()"
        },
        "llGetLocalRot": {
            "prefix": "llGetLocalRot\t(rot) func",
            "body": "llGetLocalRot()"
        },
        "llGetMass": {
            "prefix": "llGetMass\t(float) func",
            "body": "llGetMass()"
        },
        "llGetMassMKS": {
            "prefix": "llGetMassMKS\t(float) func",
            "body": "llGetMassMKS()"
        },
        "llGetMaxScaleFactor": {
            "prefix": "llGetMaxScaleFactor\t(float) func",
            "body": "llGetMaxScaleFactor()"
        },
        "llGetMemoryLimit": {
            "prefix": "llGetMemoryLimit\t(int) func",
            "body": "llGetMemoryLimit()"
        },
        "llGetMinScaleFactor": {
            "prefix": "llGetMinScaleFactor\t(float) func",
            "body": "llGetMinScaleFactor()"
        },
        "llGetNextEmail": {
            "prefix": "llGetNextEmail\t(void) func",
            "body": "llGetNextEmail(${string address}, ${string subject});\n$0"
        },
        "llGetNotecardLine": {
            "prefix": "llGetNotecardLine\t(key) func",
            "body": "llGetNotecardLine(${string name}, ${integer line})"
        },
        "llGetNumberOfNotecardLines": {
            "prefix": "llGetNumberOfNotecardLines\t(key) func",
            "body": "llGetNumberOfNotecardLines(${string name})"
        },
        "llGetNumberOfPrims": {
            "prefix": "llGetNumberOfPrims\t(int) func",
            "body": "llGetNumberOfPrims()"
        },
        "llGetNumberOfSides": {
            "prefix": "llGetNumberOfSides\t(int) func",
            "body": "llGetNumberOfSides()"
        },
        "llGetObjectDesc": {
            "prefix": "llGetObjectDesc\t(str) func",
            "body": "llGetObjectDesc()"
        },
        "llGetObjectDetails": {
            "prefix": "llGetObjectDetails\t(list) func",
            "body": "llGetObjectDetails(${key id}, ${list params})"
        },
        "llGetObjectMass": {
            "prefix": "llGetObjectMass\t(float) func",
            "body": "llGetObjectMass(${key id})"
        },
        "llGetObjectName": {
            "prefix": "llGetObjectName\t(str) func",
            "body": "llGetObjectName()"
        },
        "llGetObjectPermMask": {
            "prefix": "llGetObjectPermMask\t(int) func",
            "body": "llGetObjectPermMask(${integer mask})"
        },
        "llGetObjectPrimCount": {
            "prefix": "llGetObjectPrimCount\t(int) func",
            "body": "llGetObjectPrimCount(${key object_id})"
        },
        "llGetOmega": {
            "prefix": "llGetOmega\t(vec) func",
            "body": "llGetOmega()"
        },
        "llGetOwner": {
            "prefix": "llGetOwner\t(key) func",
            "body": "llGetOwner()"
        },
        "llGetOwnerKey": {
            "prefix": "llGetOwnerKey\t(key) func",
            "body": "llGetOwnerKey(${key id})"
        },
        "llGetParcelDetails": {
            "prefix": "llGetParcelDetails\t(list) func",
            "body": "llGetParcelDetails(${vector pos}, ${list params})"
        },
        "llGetParcelFlags": {
            "prefix": "llGetParcelFlags\t(int) func",
            "body": "llGetParcelFlags(${vector pos})"
        },
        "llGetParcelMaxPrims": {
            "prefix": "llGetParcelMaxPrims\t(int) func",
            "body": "llGetParcelMaxPrims(${vector pos}, ${integer sim_wide})"
        },
        "llGetParcelMusicURL": {
            "prefix": "llGetParcelMusicURL\t(str) func",
            "body": "llGetParcelMusicURL()"
        },
        "llGetParcelPrimCount": {
            "prefix": "llGetParcelPrimCount\t(int) func",
            "body": "llGetParcelPrimCount(${vector pos}, ${integer category}, ${integer sim_wide})"
        },
        "llGetParcelPrimOwners": {
            "prefix": "llGetParcelPrimOwners\t(list) func",
            "body": "llGetParcelPrimOwners(${vector pos})"
        },
        "llGetPermissions": {
            "prefix": "llGetPermissions\t(int) func",
            "body": "llGetPermissions()"
        },
        "llGetPermissionsKey": {
            "prefix": "llGetPermissionsKey\t(key) func",
            "body": "llGetPermissionsKey()"
        },
        "llGetPhysicsMaterial": {
            "prefix": "llGetPhysicsMaterial\t(list) func",
            "body": "llGetPhysicsMaterial()"
        },
        "llGetPos": {
            "prefix": "llGetPos\t(vec) func",
            "body": "llGetPos()"
        },
        "llGetPrimMediaParams": {
            "prefix": "llGetPrimMediaParams\t(list) func",
            "body": "llGetPrimMediaParams(${integer face}, ${list params})"
        },
        "llGetPrimitiveParams": {
            "prefix": "llGetPrimitiveParams\t(list) func",
            "body": "llGetPrimitiveParams(${list params})"
        },
        "llGetRegionAgentCount": {
            "prefix": "llGetRegionAgentCount\t(int) func",
            "body": "llGetRegionAgentCount()"
        },
        "llGetRegionCorner": {
            "prefix": "llGetRegionCorner\t(vec) func",
            "body": "llGetRegionCorner()"
        },
        "llGetRegionFPS": {
            "prefix": "llGetRegionFPS\t(float) func",
            "body": "llGetRegionFPS()"
        },
        "llGetRegionFlags": {
            "prefix": "llGetRegionFlags\t(int) func",
            "body": "llGetRegionFlags()"
        },
        "llGetRegionName": {
            "prefix": "llGetRegionName\t(str) func",
            "body": "llGetRegionName()"
        },
        "llGetRegionTimeDilation": {
            "prefix": "llGetRegionTimeDilation\t(float) func",
            "body": "llGetRegionTimeDilation()"
        },
        "llGetRootPosition": {
            "prefix": "llGetRootPosition\t(vec) func",
            "body": "llGetRootPosition()"
        },
        "llGetRootRotation": {
            "prefix": "llGetRootRotation\t(rot) func",
            "body": "llGetRootRotation()"
        },
        "llGetRot": {
            "prefix": "llGetRot\t(rot) func",
            "body": "llGetRot()"
        },
        "llGetSPMaxMemory": {
            "prefix": "llGetSPMaxMemory\t(int) func",
            "body": "llGetSPMaxMemory()"
        },
        "llGetScale": {
            "prefix": "llGetScale\t(vec) func",
            "body": "llGetScale()"
        },
        "llGetScriptName": {
            "prefix": "llGetScriptName\t(str) func",
            "body": "llGetScriptName()"
        },
        "llGetScriptState": {
            "prefix": "llGetScriptState\t(int) func",
            "body": "llGetScriptState(${string name})"
        },
        "llGetSimStats": {
            "prefix": "llGetSimStats\t(float) func",
            "body": "llGetSimStats(${integer stat_type})"
        },
        "llGetSimulatorHostname": {
            "prefix": "llGetSimulatorHostname\t(str) func",
            "body": "llGetSimulatorHostname()"
        },
        "llGetStartParameter": {
            "prefix": "llGetStartParameter\t(int) func",
            "body": "llGetStartParameter()"
        },
        "llGetStaticPath": {
            "prefix": "llGetStaticPath\t(list) func",
            "body": "llGetStaticPath(${vector start}, ${vector end}, ${float radius}, ${list params})"
        },
        "llGetStatus": {
            "prefix": "llGetStatus\t(int) func",
            "body": "llGetStatus(${integer status})"
        },
        "llGetSubString": {
            "prefix": "llGetSubString\t(str) func",
            "body": "llGetSubString(${string src}, ${integer start}, ${integer end})"
        },
        "llGetSunDirection": {
            "prefix": "llGetSunDirection\t(vec) func",
            "body": "llGetSunDirection()"
        },
        "llGetTexture": {
            "prefix": "llGetTexture\t(str) func",
            "body": "llGetTexture(${integer face})"
        },
        "llGetTextureOffset": {
            "prefix": "llGetTextureOffset\t(vec) func",
            "body": "llGetTextureOffset(${integer face})"
        },
        "llGetTextureRot": {
            "prefix": "llGetTextureRot\t(float) func",
            "body": "llGetTextureRot(${integer side})"
        },
        "llGetTextureScale": {
            "prefix": "llGetTextureScale\t(vec) func",
            "body": "llGetTextureScale(${integer side})"
        },
        "llGetTime": {
            "prefix": "llGetTime\t(float) func",
            "body": "llGetTime()"
        },
        "llGetTimeOfDay": {
            "prefix": "llGetTimeOfDay\t(float) func",
            "body": "llGetTimeOfDay()"
        },
        "llGetTimestamp": {
            "prefix": "llGetTimestamp\t(str) func",
            "body": "llGetTimestamp()"
        },
        "llGetTorque": {
            "prefix": "llGetTorque\t(vec) func",
            "body": "llGetTorque()"
        },
        "llGetUnixTime": {
            "prefix": "llGetUnixTime\t(int) func",
            "body": "llGetUnixTime()"
        },
        "llGetUsedMemory": {
            "prefix": "llGetUsedMemory\t(int) func",
            "body": "llGetUsedMemory()"
        },
        "llGetUsername": {
            "prefix": "llGetUsername\t(str) func",
            "body": "llGetUsername(${key id})"
        },
        "llGetVel": {
            "prefix": "llGetVel\t(vec) func",
            "body": "llGetVel()"
        },
        "llGetWallclock": {
            "prefix": "llGetWallclock\t(float) func",
            "body": "llGetWallclock()"
        },
        "llGiveInventory": {
            "prefix": "llGiveInventory\t(void) func",
            "body": "llGiveInventory(${key destination}, ${string inventory});\n$0"
        },
        "llGiveInventoryList": {
            "prefix": "llGiveInventoryList\t(void) func",
            "body": "llGiveInventoryList(${key target}, ${string folder}, ${list inventory});\n$0"
        },
        "llGiveMoney": {
            "prefix": "llGiveMoney\t(int) func",
            "body": "llGiveMoney(${key destination}, ${integer amount})"
        },
        "llGround": {
            "prefix": "llGround\t(float) func",
            "body": "llGround(${vector offset})"
        },
        "llGroundContour": {
            "prefix": "llGroundContour\t(vec) func",
            "body": "llGroundContour(${vector offset})"
        },
        "llGroundNormal": {
            "prefix": "llGroundNormal\t(vec) func",
            "body": "llGroundNormal(${vector offset})"
        },
        "llGroundRepel": {
            "prefix": "llGroundRepel\t(void) func",
            "body": "llGroundRepel(${float height}, ${integer water}, ${float tau});\n$0"
        },
        "llGroundSlope": {
            "prefix": "llGroundSlope\t(vec) func",
            "body": "llGroundSlope(${vector offset})"
        },
        "llHTTPRequest": {
            "prefix": "llHTTPRequest\t(key) func",
            "body": "llHTTPRequest(${string url}, ${list parameters}, ${string body})"
        },
        "llHTTPResponse": {
            "prefix": "llHTTPResponse\t(void) func",
            "body": "llHTTPResponse(${key request_id}, ${integer status}, ${string body});\n$0"
        },
        "llInsertString": {
            "prefix": "llInsertString\t(str) func",
            "body": "llInsertString(${string dst}, ${integer position}, ${string src})"
        },
        "llInstantMessage": {
            "prefix": "llInstantMessage\t(void) func",
            "body": "llInstantMessage(${key user}, ${string message});\n$0"
        },
        "llIntegerToBase64": {
            "prefix": "llIntegerToBase64\t(str) func",
            "body": "llIntegerToBase64(${integer number})"
        },
        "llJson2List": {
            "prefix": "llJson2List\t(list) func",
            "body": "llJson2List(${string json})"
        },
        "llJsonGetValue": {
            "prefix": "llJsonGetValue\t(str) func",
            "body": "llJsonGetValue(${string json}, ${list specifiers})"
        },
        "llJsonSetValue": {
            "prefix": "llJsonSetValue\t(str) func",
            "body": "llJsonSetValue(${string json}, ${list specifiers}, ${string value})"
        },
        "llJsonValueType": {
            "prefix": "llJsonValueType\t(str) func",
            "body": "llJsonValueType(${string json}, ${list specifiers})"
        },
        "llKey2Name": {
            "prefix": "llKey2Name\t(str) func",
            "body": "llKey2Name(${key id})"
        },
        "llKeyCountKeyValue": {
            "prefix": "llKeyCountKeyValue\t(key) func",
            "body": "llKeyCountKeyValue()"
        },
        "llKeysKeyValue": {
            "prefix": "llKeysKeyValue\t(key) func",
            "body": "llKeysKeyValue(${integer first}, ${integer count})"
        },
        "llLinkParticleSystem": {
            "prefix": "llLinkParticleSystem\t(void) func",
            "body": "llLinkParticleSystem(${integer linknumber}, ${list rules});\n$0"
        },
        "llLinkSitTarget": {
            "prefix": "llLinkSitTarget\t(void) func",
            "body": "llLinkSitTarget(${integer link}, ${vector offset}, ${rotation rot});\n$0"
        },
        "llList2CSV": {
            "prefix": "llList2CSV\t(str) func",
            "body": "llList2CSV(${list src})"
        },
        "llList2Float": {
            "prefix": "llList2Float\t(float) func",
            "body": "llList2Float(${list src}, ${integer index})"
        },
        "llList2Integer": {
            "prefix": "llList2Integer\t(int) func",
            "body": "llList2Integer(${list src}, ${integer index})"
        },
        "llList2Json": {
            "prefix": "llList2Json\t(str) func",
            "body": "llList2Json(${string type}, ${list values})"
        },
        "llList2Key": {
            "prefix": "llList2Key\t(key) func",
            "body": "llList2Key(${list src}, ${integer index})"
        },
        "llList2List": {
            "prefix": "llList2List\t(list) func",
            "body": "llList2List(${list src}, ${integer start}, ${integer end})"
        },
        "llList2ListStrided": {
            "prefix": "llList2ListStrided\t(list) func",
            "body": "llList2ListStrided(${list src}, ${integer start}, ${integer end}, ${integer stride})"
        },
        "llList2Rot": {
            "prefix": "llList2Rot\t(rot) func",
            "body": "llList2Rot(${list src}, ${integer index})"
        },
        "llList2String": {
            "prefix": "llList2String\t(str) func",
            "body": "llList2String(${list src}, ${integer index})"
        },
        "llList2Vector": {
            "prefix": "llList2Vector\t(vec) func",
            "body": "llList2Vector(${list src}, ${integer index})"
        },
        "llListFindList": {
            "prefix": "llListFindList\t(int) func",
            "body": "llListFindList(${list src}, ${list test})"
        },
        "llListInsertList": {
            "prefix": "llListInsertList\t(list) func",
            "body": "llListInsertList(${list dest}, ${list src}, ${integer start})"
        },
        "llListRandomize": {
            "prefix": "llListRandomize\t(list) func",
            "body": "llListRandomize(${list src}, ${integer stride})"
        },
        "llListReplaceList": {
            "prefix": "llListReplaceList\t(list) func",
            "body": "llListReplaceList(${list dest}, ${list src}, ${integer start}, ${integer end})"
        },
        "llListSort": {
            "prefix": "llListSort\t(list) func",
            "body": "llListSort(${list src}, ${integer stride}, ${integer ascending})"
        },
        "llListStatistics": {
            "prefix": "llListStatistics\t(float) func",
            "body": "llListStatistics(${integer operation}, ${list src})"
        },
        "llListen": {
            "prefix": "llListen\t(int) func",
            "body": "llListen(${integer channel}, ${string name}, ${key id}, ${string msg})"
        },
        "llListenControl": {
            "prefix": "llListenControl\t(void) func",
            "body": "llListenControl(${integer number}, ${integer active});\n$0"
        },
        "llListenRemove": {
            "prefix": "llListenRemove\t(void) func",
            "body": "llListenRemove(${integer number});\n$0"
        },
        "llLoadURL": {
            "prefix": "llLoadURL\t(void) func",
            "body": "llLoadURL(${key avatar}, ${string message}, ${string url});\n$0"
        },
        "llLog": {
            "prefix": "llLog\t(float) func",
            "body": "llLog(${float val})"
        },
        "llLog10": {
            "prefix": "llLog10\t(float) func",
            "body": "llLog10(${float val})"
        },
        "llLookAt": {
            "prefix": "llLookAt\t(void) func",
            "body": "llLookAt(${vector target}, ${float strength}, ${float damping});\n$0"
        },
        "llLoopSound": {
            "prefix": "llLoopSound\t(void) func",
            "body": "llLoopSound(${string sound}, ${float volume});\n$0"
        },
        "llLoopSoundMaster": {
            "prefix": "llLoopSoundMaster\t(void) func",
            "body": "llLoopSoundMaster(${string sound}, ${float volume});\n$0"
        },
        "llLoopSoundSlave": {
            "prefix": "llLoopSoundSlave\t(void) func",
            "body": "llLoopSoundSlave(${string sound}, ${float volume});\n$0"
        },
        "llMD5String": {
            "prefix": "llMD5String\t(str) func",
            "body": "llMD5String(${string src}, ${integer nonce})"
        },
        "llManageEstateAccess": {
            "prefix": "llManageEstateAccess\t(int) func",
            "body": "llManageEstateAccess(${integer action}, ${key id})"
        },
        "llMapDestination": {
            "prefix": "llMapDestination\t(void) func",
            "body": "llMapDestination(${string simname}, ${vector pos}, ${vector look_at});\n$0"
        },
        "llMessageLinked": {
            "prefix": "llMessageLinked\t(void) func",
            "body": "llMessageLinked(${integer linknum}, ${integer num}, ${string str}, ${key id});\n$0"
        },
        "llMinEventDelay": {
            "prefix": "llMinEventDelay\t(void) func",
            "body": "llMinEventDelay(${float delay});\n$0"
        },
        "llModPow": {
            "prefix": "llModPow\t(int) func",
            "body": "llModPow(${integer a}, ${integer b}, ${integer c})"
        },
        "llModifyLand": {
            "prefix": "llModifyLand\t(void) func",
            "body": "llModifyLand(${integer action}, ${integer brush});\n$0"
        },
        "llMoveToTarget": {
            "prefix": "llMoveToTarget\t(void) func",
            "body": "llMoveToTarget(${vector target}, ${float tau});\n$0"
        },
        "llNavigateTo": {
            "prefix": "llNavigateTo\t(void) func",
            "body": "llNavigateTo(${vector point}, ${list options});\n$0"
        },
        "llOffsetTexture": {
            "prefix": "llOffsetTexture\t(void) func",
            "body": "llOffsetTexture(${float u}, ${float v}, ${integer face});\n$0"
        },
        "llOpenRemoteDataChannel": {
            "prefix": "llOpenRemoteDataChannel\t(void) func",
            "body": "llOpenRemoteDataChannel();\n$0"
        },
        "llOverMyLand": {
            "prefix": "llOverMyLand\t(int) func",
            "body": "llOverMyLand(${key id})"
        },
        "llOwnerSay": {
            "prefix": "llOwnerSay\t(void) func",
            "body": "llOwnerSay(${string msg});\n$0"
        },
        "llParcelMediaCommandList": {
            "prefix": "llParcelMediaCommandList\t(void) func",
            "body": "llParcelMediaCommandList(${list command});\n$0"
        },
        "llParcelMediaQuery": {
            "prefix": "llParcelMediaQuery\t(list) func",
            "body": "llParcelMediaQuery(${list query})"
        },
        "llParseString2List": {
            "prefix": "llParseString2List\t(list) func",
            "body": "llParseString2List(${string src}, ${list separators}, ${list spacers})"
        },
        "llParseStringKeepNulls": {
            "prefix": "llParseStringKeepNulls\t(list) func",
            "body": "llParseStringKeepNulls(${string src}, ${list separators}, ${list spacers})"
        },
        "llParticleSystem": {
            "prefix": "llParticleSystem\t(void) func",
            "body": "llParticleSystem(${list rules});\n$0"
        },
        "llPassCollisions": {
            "prefix": "llPassCollisions\t(void) func",
            "body": "llPassCollisions(${integer pass});\n$0"
        },
        "llPassTouches": {
            "prefix": "llPassTouches\t(void) func",
            "body": "llPassTouches(${integer pass});\n$0"
        },
        "llPatrolPoints": {
            "prefix": "llPatrolPoints\t(void) func",
            "body": "llPatrolPoints(${list points}, ${list options});\n$0"
        },
        "llPlaySound": {
            "prefix": "llPlaySound\t(void) func",
            "body": "llPlaySound(${string sound}, ${float volume});\n$0"
        },
        "llPlaySoundSlave": {
            "prefix": "llPlaySoundSlave\t(void) func",
            "body": "llPlaySoundSlave(${string sound}, ${float volume});\n$0"
        },
        "llPow": {
            "prefix": "llPow\t(float) func",
            "body": "llPow(${float base}, ${float exponent})"
        },
        "llPreloadSound": {
            "prefix": "llPreloadSound\t(void) func",
            "body": "llPreloadSound(${string sound});\n$0"
        },
        "llPursue": {
            "prefix": "llPursue\t(void) func",
            "body": "llPursue(${key target}, ${list options});\n$0"
        },
        "llPushObject": {
            "prefix": "llPushObject\t(void) func",
            "body": "llPushObject(${key id}, ${vector impulse}, ${vector ang_impulse}, ${integer local});\n$0"
        },
        "llReadKeyValue": {
            "prefix": "llReadKeyValue\t(key) func",
            "body": "llReadKeyValue(${string k})"
        },
        "llRegionSay": {
            "prefix": "llRegionSay\t(void) func",
            "body": "llRegionSay(${integer channel}, ${string msg});\n$0"
        },
        "llRegionSayTo": {
            "prefix": "llRegionSayTo\t(void) func",
            "body": "llRegionSayTo(${key target}, ${integer channel}, ${string msg});\n$0"
        },
        "llReleaseControls": {
            "prefix": "llReleaseControls\t(void) func",
            "body": "llReleaseControls();\n$0"
        },
        "llReleaseURL": {
            "prefix": "llReleaseURL\t(void) func",
            "body": "llReleaseURL(${string url});\n$0"
        },
        "llRemoteDataReply": {
            "prefix": "llRemoteDataReply\t(void) func",
            "body": "llRemoteDataReply(${key channel}, ${key message_id}, ${string sdata}, ${integer idata});\n$0"
        },
        "llRemoteLoadScriptPin": {
            "prefix": "llRemoteLoadScriptPin\t(void) func",
            "body": "llRemoteLoadScriptPin(${key target}, ${string name}, ${integer pin}, ${integer running}, ${integer start_param});\n$0"
        },
        "llRemoveFromLandBanList": {
            "prefix": "llRemoveFromLandBanList\t(void) func",
            "body": "llRemoveFromLandBanList(${key avatar});\n$0"
        },
        "llRemoveFromLandPassList": {
            "prefix": "llRemoveFromLandPassList\t(void) func",
            "body": "llRemoveFromLandPassList(${key avatar});\n$0"
        },
        "llRemoveInventory": {
            "prefix": "llRemoveInventory\t(void) func",
            "body": "llRemoveInventory(${string item});\n$0"
        },
        "llRemoveVehicleFlags": {
            "prefix": "llRemoveVehicleFlags\t(void) func",
            "body": "llRemoveVehicleFlags(${integer flags});\n$0"
        },
        "llRequestAgentData": {
            "prefix": "llRequestAgentData\t(key) func",
            "body": "llRequestAgentData(${key id}, ${integer data})"
        },
        "llRequestDisplayName": {
            "prefix": "llRequestDisplayName\t(key) func",
            "body": "llRequestDisplayName(${key id})"
        },
        "llRequestExperiencePermissions": {
            "prefix": "llRequestExperiencePermissions\t(void) func",
            "body": "llRequestExperiencePermissions(${key agent}, ${string name});\n$0"
        },
        "llRequestInventoryData": {
            "prefix": "llRequestInventoryData\t(key) func",
            "body": "llRequestInventoryData(${string name})"
        },
        "llRequestPermissions": {
            "prefix": "llRequestPermissions\t(void) func",
            "body": "llRequestPermissions(${key agent}, ${integer perm});\n$0"
        },
        "llRequestSecureURL": {
            "prefix": "llRequestSecureURL\t(key) func",
            "body": "llRequestSecureURL()"
        },
        "llRequestSimulatorData": {
            "prefix": "llRequestSimulatorData\t(key) func",
            "body": "llRequestSimulatorData(${string simulator}, ${integer data})"
        },
        "llRequestURL": {
            "prefix": "llRequestURL\t(key) func",
            "body": "llRequestURL()"
        },
        "llRequestUsername": {
            "prefix": "llRequestUsername\t(key) func",
            "body": "llRequestUsername(${key id})"
        },
        "llResetAnimationOverride": {
            "prefix": "llResetAnimationOverride\t(void) func",
            "body": "llResetAnimationOverride(${string anim_state});\n$0"
        },
        "llResetLandBanList": {
            "prefix": "llResetLandBanList\t(void) func",
            "body": "llResetLandBanList();\n$0"
        },
        "llResetLandPassList": {
            "prefix": "llResetLandPassList\t(void) func",
            "body": "llResetLandPassList();\n$0"
        },
        "llResetOtherScript": {
            "prefix": "llResetOtherScript\t(void) func",
            "body": "llResetOtherScript(${string name});\n$0"
        },
        "llResetScript": {
            "prefix": "llResetScript\t(void) func",
            "body": "llResetScript();\n$0"
        },
        "llResetTime": {
            "prefix": "llResetTime\t(void) func",
            "body": "llResetTime();\n$0"
        },
        "llReturnObjectsByID": {
            "prefix": "llReturnObjectsByID\t(int) func",
            "body": "llReturnObjectsByID(${list objects})"
        },
        "llReturnObjectsByOwner": {
            "prefix": "llReturnObjectsByOwner\t(int) func",
            "body": "llReturnObjectsByOwner(${key owner}, ${integer scope})"
        },
        "llRezAtRoot": {
            "prefix": "llRezAtRoot\t(void) func",
            "body": "llRezAtRoot(${string inventory}, ${vector pos}, ${vector vel}, ${rotation rot}, ${integer param});\n$0"
        },
        "llRezObject": {
            "prefix": "llRezObject\t(void) func",
            "body": "llRezObject(${string inventory}, ${vector pos}, ${vector vel}, ${rotation rot}, ${integer param});\n$0"
        },
        "llRot2Angle": {
            "prefix": "llRot2Angle\t(float) func",
            "body": "llRot2Angle(${rotation rot})"
        },
        "llRot2Axis": {
            "prefix": "llRot2Axis\t(vec) func",
            "body": "llRot2Axis(${rotation rot})"
        },
        "llRot2Euler": {
            "prefix": "llRot2Euler\t(vec) func",
            "body": "llRot2Euler(${rotation q})"
        },
        "llRot2Fwd": {
            "prefix": "llRot2Fwd\t(vec) func",
            "body": "llRot2Fwd(${rotation q})"
        },
        "llRot2Left": {
            "prefix": "llRot2Left\t(vec) func",
            "body": "llRot2Left(${rotation q})"
        },
        "llRot2Up": {
            "prefix": "llRot2Up\t(vec) func",
            "body": "llRot2Up(${rotation q})"
        },
        "llRotBetween": {
            "prefix": "llRotBetween\t(rot) func",
            "body": "llRotBetween(${vector v1}, ${vector v2})"
        },
        "llRotLookAt": {
            "prefix": "llRotLookAt\t(void) func",
            "body": "llRotLookAt(${rotation target}, ${float strength}, ${float damping});\n$0"
        },
        "llRotTarget": {
            "prefix": "llRotTarget\t(int) func",
            "body": "llRotTarget(${rotation rot}, ${float error})"
        },
        "llRotTargetRemove": {
            "prefix": "llRotTargetRemove\t(void) func",
            "body": "llRotTargetRemove(${integer number});\n$0"
        },
        "llRotateTexture": {
            "prefix": "llRotateTexture\t(void) func",
            "body": "llRotateTexture(${float angle}, ${integer face});\n$0"
        },
        "llRound": {
            "prefix": "llRound\t(int) func",
            "body": "llRound(${float val})"
        },
        "llSHA1String": {
            "prefix": "llSHA1String\t(str) func",
            "body": "llSHA1String(${string src})"
        },
        "llSameGroup": {
            "prefix": "llSameGroup\t(int) func",
            "body": "llSameGroup(${key id})"
        },
        "llSay": {
            "prefix": "llSay\t(void) func",
            "body": "llSay(${integer channel}, ${string msg});\n$0"
        },
        "llScaleByFactor": {
            "prefix": "llScaleByFactor\t(int) func",
            "body": "llScaleByFactor(${float scaling_factor})"
        },
        "llScaleTexture": {
            "prefix": "llScaleTexture\t(void) func",
            "body": "llScaleTexture(${float u}, ${float v}, ${integer face});\n$0"
        },
        "llScriptDanger": {
            "prefix": "llScriptDanger\t(int) func",
            "body": "llScriptDanger(${vector pos})"
        },
        "llScriptProfiler": {
            "prefix": "llScriptProfiler\t(void) func",
            "body": "llScriptProfiler(${integer flags});\n$0"
        },
        "llSendRemoteData": {
            "prefix": "llSendRemoteData\t(key) func",
            "body": "llSendRemoteData(${key channel}, ${string dest}, ${integer idata}, ${string sdata})"
        },
        "llSensor": {
            "prefix": "llSensor\t(void) func",
            "body": "llSensor(${string name}, ${key id}, ${integer type}, ${float range}, ${float arc});\n$0"
        },
        "llSensorRemove": {
            "prefix": "llSensorRemove\t(void) func",
            "body": "llSensorRemove();\n$0"
        },
        "llSensorRepeat": {
            "prefix": "llSensorRepeat\t(void) func",
            "body": "llSensorRepeat(${string name}, ${key id}, ${integer type}, ${float range}, ${float arc}, ${float rate});\n$0"
        },
        "llSetAlpha": {
            "prefix": "llSetAlpha\t(void) func",
            "body": "llSetAlpha(${float alpha}, ${integer face});\n$0"
        },
        "llSetAngularVelocity": {
            "prefix": "llSetAngularVelocity\t(void) func",
            "body": "llSetAngularVelocity(${vector angular_velocity}, ${integer local});\n$0"
        },
        "llSetAnimationOverride": {
            "prefix": "llSetAnimationOverride\t(void) func",
            "body": "llSetAnimationOverride(${string anim_state}, ${string anim});\n$0"
        },
        "llSetBuoyancy": {
            "prefix": "llSetBuoyancy\t(void) func",
            "body": "llSetBuoyancy(${float buoyancy});\n$0"
        },
        "llSetCameraAtOffset": {
            "prefix": "llSetCameraAtOffset\t(void) func",
            "body": "llSetCameraAtOffset(${vector offset});\n$0"
        },
        "llSetCameraEyeOffset": {
            "prefix": "llSetCameraEyeOffset\t(void) func",
            "body": "llSetCameraEyeOffset(${vector offset});\n$0"
        },
        "llSetCameraParams": {
            "prefix": "llSetCameraParams\t(void) func",
            "body": "llSetCameraParams(${list rules});\n$0"
        },
        "llSetClickAction": {
            "prefix": "llSetClickAction\t(void) func",
            "body": "llSetClickAction(${integer action});\n$0"
        },
        "llSetColor": {
            "prefix": "llSetColor\t(void) func",
            "body": "llSetColor(${vector color}, ${integer face});\n$0"
        },
        "llSetContentType": {
            "prefix": "llSetContentType\t(void) func",
            "body": "llSetContentType(${key request_id}, ${integer content_type});\n$0"
        },
        "llSetDamage": {
            "prefix": "llSetDamage\t(void) func",
            "body": "llSetDamage(${float damage});\n$0"
        },
        "llSetForce": {
            "prefix": "llSetForce\t(void) func",
            "body": "llSetForce(${vector force}, ${integer local});\n$0"
        },
        "llSetForceAndTorque": {
            "prefix": "llSetForceAndTorque\t(void) func",
            "body": "llSetForceAndTorque(${vector force}, ${vector torque}, ${integer local});\n$0"
        },
        "llSetHoverHeight": {
            "prefix": "llSetHoverHeight\t(void) func",
            "body": "llSetHoverHeight(${float height}, ${integer water}, ${float tau});\n$0"
        },
        "llSetKeyframedMotion": {
            "prefix": "llSetKeyframedMotion\t(void) func",
            "body": "llSetKeyframedMotion(${list keyframes}, ${list options});\n$0"
        },
        "llSetLinkAlpha": {
            "prefix": "llSetLinkAlpha\t(void) func",
            "body": "llSetLinkAlpha(${integer linknumber}, ${float alpha}, ${integer face});\n$0"
        },
        "llSetLinkCamera": {
            "prefix": "llSetLinkCamera\t(void) func",
            "body": "llSetLinkCamera(${integer link}, ${vector eye}, ${vector at});\n$0"
        },
        "llSetLinkColor": {
            "prefix": "llSetLinkColor\t(void) func",
            "body": "llSetLinkColor(${integer linknumber}, ${vector color}, ${integer face});\n$0"
        },
        "llSetLinkMedia": {
            "prefix": "llSetLinkMedia\t(int) func",
            "body": "llSetLinkMedia(${integer link}, ${integer face}, ${list params})"
        },
        "llSetLinkPrimitiveParams": {
            "prefix": "llSetLinkPrimitiveParams\t(void) func",
            "body": "llSetLinkPrimitiveParams(${integer linknumber}, ${list rules});\n$0"
        },
        "llSetLinkPrimitiveParamsFast": {
            "prefix": "llSetLinkPrimitiveParamsFast\t(void) func",
            "body": "llSetLinkPrimitiveParamsFast(${integer linknumber}, ${list rules});\n$0"
        },
        "llSetLinkTexture": {
            "prefix": "llSetLinkTexture\t(void) func",
            "body": "llSetLinkTexture(${integer linknumber}, ${string texture}, ${integer face});\n$0"
        },
        "llSetLinkTextureAnim": {
            "prefix": "llSetLinkTextureAnim\t(void) func",
            "body": "llSetLinkTextureAnim(${integer link}, ${integer mode}, ${integer face}, ${integer sizex}, ${integer sizey}, ${float start}, ${float length}, ${float rate});\n$0"
        },
        "llSetLocalRot": {
            "prefix": "llSetLocalRot\t(void) func",
            "body": "llSetLocalRot(${rotation rot});\n$0"
        },
        "llSetMemoryLimit": {
            "prefix": "llSetMemoryLimit\t(int) func",
            "body": "llSetMemoryLimit(${integer limit})"
        },
        "llSetObjectDesc": {
            "prefix": "llSetObjectDesc\t(void) func",
            "body": "llSetObjectDesc(${string desc});\n$0"
        },
        "llSetObjectName": {
            "prefix": "llSetObjectName\t(void) func",
            "body": "llSetObjectName(${string name});\n$0"
        },
        "llSetParcelMusicURL": {
            "prefix": "llSetParcelMusicURL\t(void) func",
            "body": "llSetParcelMusicURL(${string url});\n$0"
        },
        "llSetPayPrice": {
            "prefix": "llSetPayPrice\t(void) func",
            "body": "llSetPayPrice(${integer price}, ${list quick_pay_buttons});\n$0"
        },
        "llSetPhysicsMaterial": {
            "prefix": "llSetPhysicsMaterial\t(void) func",
            "body": "llSetPhysicsMaterial(${integer flags}, ${float gravity_multiplier}, ${float restitution}, ${float friction}, ${float density});\n$0"
        },
        "llSetPos": {
            "prefix": "llSetPos\t(void) func",
            "body": "llSetPos(${vector pos});\n$0"
        },
        "llSetPrimMediaParams": {
            "prefix": "llSetPrimMediaParams\t(int) func",
            "body": "llSetPrimMediaParams(${integer face}, ${list params})"
        },
        "llSetPrimitiveParams": {
            "prefix": "llSetPrimitiveParams\t(void) func",
            "body": "llSetPrimitiveParams(${list rules});\n$0"
        },
        "llSetRegionPos": {
            "prefix": "llSetRegionPos\t(int) func",
            "body": "llSetRegionPos(${vector pos})"
        },
        "llSetRemoteScriptAccessPin": {
            "prefix": "llSetRemoteScriptAccessPin\t(void) func",
            "body": "llSetRemoteScriptAccessPin(${integer pin});\n$0"
        },
        "llSetRot": {
            "prefix": "llSetRot\t(void) func",
            "body": "llSetRot(${rotation rot});\n$0"
        },
        "llSetScale": {
            "prefix": "llSetScale\t(void) func",
            "body": "llSetScale(${vector scale});\n$0"
        },
        "llSetScriptState": {
            "prefix": "llSetScriptState\t(void) func",
            "body": "llSetScriptState(${string name}, ${integer run});\n$0"
        },
        "llSetSitText": {
            "prefix": "llSetSitText\t(void) func",
            "body": "llSetSitText(${string text});\n$0"
        },
        "llSetSoundQueueing": {
            "prefix": "llSetSoundQueueing\t(void) func",
            "body": "llSetSoundQueueing(${integer queue});\n$0"
        },
        "llSetSoundRadius": {
            "prefix": "llSetSoundRadius\t(void) func",
            "body": "llSetSoundRadius(${float radius});\n$0"
        },
        "llSetStatus": {
            "prefix": "llSetStatus\t(void) func",
            "body": "llSetStatus(${integer status}, ${integer value});\n$0"
        },
        "llSetText": {
            "prefix": "llSetText\t(void) func",
            "body": "llSetText(${string text}, ${vector color}, ${float alpha});\n$0"
        },
        "llSetTexture": {
            "prefix": "llSetTexture\t(void) func",
            "body": "llSetTexture(${string texture}, ${integer face});\n$0"
        },
        "llSetTextureAnim": {
            "prefix": "llSetTextureAnim\t(void) func",
            "body": "llSetTextureAnim(${integer mode}, ${integer face}, ${integer sizex}, ${integer sizey}, ${float start}, ${float length}, ${float rate});\n$0"
        },
        "llSetTimerEvent": {
            "prefix": "llSetTimerEvent\t(void) func",
            "body": "llSetTimerEvent(${float sec});\n$0"
        },
        "llSetTorque": {
            "prefix": "llSetTorque\t(void) func",
            "body": "llSetTorque(${vector torque}, ${integer local});\n$0"
        },
        "llSetTouchText": {
            "prefix": "llSetTouchText\t(void) func",
            "body": "llSetTouchText(${string text});\n$0"
        },
        "llSetVehicleFlags": {
            "prefix": "llSetVehicleFlags\t(void) func",
            "body": "llSetVehicleFlags(${integer flags});\n$0"
        },
        "llSetVehicleFloatParam": {
            "prefix": "llSetVehicleFloatParam\t(void) func",
            "body": "llSetVehicleFloatParam(${integer param}, ${float value});\n$0"
        },
        "llSetVehicleRotationParam": {
            "prefix": "llSetVehicleRotationParam\t(void) func",
            "body": "llSetVehicleRotationParam(${integer param}, ${rotation rot});\n$0"
        },
        "llSetVehicleType": {
            "prefix": "llSetVehicleType\t(void) func",
            "body": "llSetVehicleType(${integer type});\n$0"
        },
        "llSetVehicleVectorParam": {
            "prefix": "llSetVehicleVectorParam\t(void) func",
            "body": "llSetVehicleVectorParam(${integer param}, ${vector vec});\n$0"
        },
        "llSetVelocity": {
            "prefix": "llSetVelocity\t(void) func",
            "body": "llSetVelocity(${vector velocity}, ${integer local});\n$0"
        },
        "llShout": {
            "prefix": "llShout\t(void) func",
            "body": "llShout(${integer channel}, ${string msg});\n$0"
        },
        "llSin": {
            "prefix": "llSin\t(float) func",
            "body": "llSin(${float theta})"
        },
        "llSitTarget": {
            "prefix": "llSitTarget\t(void) func",
            "body": "llSitTarget(${vector offset}, ${rotation rot});\n$0"
        },
        "llSleep": {
            "prefix": "llSleep\t(void) func",
            "body": "llSleep(${float sec});\n$0"
        },
        "llSqrt": {
            "prefix": "llSqrt\t(float) func",
            "body": "llSqrt(${float val})"
        },
        "llStartAnimation": {
            "prefix": "llStartAnimation\t(void) func",
            "body": "llStartAnimation(${string anim});\n$0"
        },
        "llStopAnimation": {
            "prefix": "llStopAnimation\t(void) func",
            "body": "llStopAnimation(${string anim});\n$0"
        },
        "llStopHover": {
            "prefix": "llStopHover\t(void) func",
            "body": "llStopHover();\n$0"
        },
        "llStopLookAt": {
            "prefix": "llStopLookAt\t(void) func",
            "body": "llStopLookAt();\n$0"
        },
        "llStopMoveToTarget": {
            "prefix": "llStopMoveToTarget\t(void) func",
            "body": "llStopMoveToTarget();\n$0"
        },
        "llStopSound": {
            "prefix": "llStopSound\t(void) func",
            "body": "llStopSound();\n$0"
        },
        "llStringLength": {
            "prefix": "llStringLength\t(int) func",
            "body": "llStringLength(${string str})"
        },
        "llStringToBase64": {
            "prefix": "llStringToBase64\t(str) func",
            "body": "llStringToBase64(${string str})"
        },
        "llStringTrim": {
            "prefix": "llStringTrim\t(str) func",
            "body": "llStringTrim(${string src}, ${integer trim_type})"
        },
        "llSubStringIndex": {
            "prefix": "llSubStringIndex\t(int) func",
            "body": "llSubStringIndex(${string source}, ${string pattern})"
        },
        "llTakeControls": {
            "prefix": "llTakeControls\t(void) func",
            "body": "llTakeControls(${integer controls}, ${integer accept}, ${integer pass_on});\n$0"
        },
        "llTan": {
            "prefix": "llTan\t(float) func",
            "body": "llTan(${float theta})"
        },
        "llTarget": {
            "prefix": "llTarget\t(int) func",
            "body": "llTarget(${vector position}, ${float range})"
        },
        "llTargetOmega": {
            "prefix": "llTargetOmega\t(void) func",
            "body": "llTargetOmega(${vector axis}, ${float spinrate}, ${float gain});\n$0"
        },
        "llTargetRemove": {
            "prefix": "llTargetRemove\t(void) func",
            "body": "llTargetRemove(${integer number});\n$0"
        },
        "llTeleportAgent": {
            "prefix": "llTeleportAgent\t(void) func",
            "body": "llTeleportAgent(${key avatar}, ${string landmark}, ${vector position}, ${vector look_at});\n$0"
        },
        "llTeleportAgentGlobalCoords": {
            "prefix": "llTeleportAgentGlobalCoords\t(void) func",
            "body": "llTeleportAgentGlobalCoords(${key agent}, ${vector global_coordinates}, ${vector region_coordinates}, ${vector look_at});\n$0"
        },
        "llTeleportAgentHome": {
            "prefix": "llTeleportAgentHome\t(void) func",
            "body": "llTeleportAgentHome(${key id});\n$0"
        },
        "llTextBox": {
            "prefix": "llTextBox\t(void) func",
            "body": "llTextBox(${key avatar}, ${string message}, ${integer chat_channel});\n$0"
        },
        "llToLower": {
            "prefix": "llToLower\t(str) func",
            "body": "llToLower(${string src})"
        },
        "llToUpper": {
            "prefix": "llToUpper\t(str) func",
            "body": "llToUpper(${string src})"
        },
        "llTransferLindenDollars": {
            "prefix": "llTransferLindenDollars\t(key) func",
            "body": "llTransferLindenDollars(${key destination}, ${integer amount})"
        },
        "llTriggerSound": {
            "prefix": "llTriggerSound\t(void) func",
            "body": "llTriggerSound(${string sound}, ${float volume});\n$0"
        },
        "llTriggerSoundLimited": {
            "prefix": "llTriggerSoundLimited\t(void) func",
            "body": "llTriggerSoundLimited(${string sound}, ${float volume}, ${vector top_north_east}, ${vector bottom_south_west});\n$0"
        },
        "llUnSit": {
            "prefix": "llUnSit\t(void) func",
            "body": "llUnSit(${key id});\n$0"
        },
        "llUnescapeURL": {
            "prefix": "llUnescapeURL\t(str) func",
            "body": "llUnescapeURL(${string url})"
        },
        "llUpdateCharacter": {
            "prefix": "llUpdateCharacter\t(void) func",
            "body": "llUpdateCharacter(${list options});\n$0"
        },
        "llUpdateKeyValue": {
            "prefix": "llUpdateKeyValue\t(key) func",
            "body": "llUpdateKeyValue(${string k}, ${string v}, ${integer checked}, ${string ov})"
        },
        "llVecDist": {
            "prefix": "llVecDist\t(float) func",
            "body": "llVecDist(${vector v1}, ${vector v2})"
        },
        "llVecMag": {
            "prefix": "llVecMag\t(float) func",
            "body": "llVecMag(${vector v})"
        },
        "llVecNorm": {
            "prefix": "llVecNorm\t(vec) func",
            "body": "llVecNorm(${vector v})"
        },
        "llVolumeDetect": {
            "prefix": "llVolumeDetect\t(void) func",
            "body": "llVolumeDetect(${integer detect});\n$0"
        },
        "llWanderWithin": {
            "prefix": "llWanderWithin\t(void) func",
            "body": "llWanderWithin(${vector center}, ${vector radius}, ${list options});\n$0"
        },
        "llWater": {
            "prefix": "llWater\t(float) func",
            "body": "llWater(${vector offset})"
        },
        "llWhisper": {
            "prefix": "llWhisper\t(void) func",
            "body": "llWhisper(${integer channel}, ${string msg});\n$0"
        },
        "llWind": {
            "prefix": "llWind\t(vec) func",
            "body": "llWind(${vector offset})"
        },
        "llXorBase64": {
            "prefix": "llXorBase64\t(str) func",
            "body": "llXorBase64(${string str1}, ${string str2})"
        },
//  print functions
        "print float": {
            "prefix": "print\t(float) logging",
            "body": "print(${float val});"
        },
        "print integer": {
            "prefix": "print\t(integer) logging",
            "body": "print(${integer val});"
        },
        "print key": {
            "prefix": "print\t(key) logging",
            "body": "print(${key val});"
        },
        "print list": {
            "prefix": "print\t(list) logging",
            "body": "print(${list val});"
        },
        "print quaternion": {
            "prefix": "print\t(quaternion) logging",
            "body": "print(${quaternion val});"
        },
        "print rotation": {
            "prefix": "print\t(rotation) logging",
            "body": "print(${rotation val});"
        },
        "print string": {
            "prefix": "print\t(string) logging",
            "body": "print(${string val});"
        },
        "print vector": {
            "prefix": "print\t(vector) logging",
            "body": "print(${vector val});"
        },
//  storage types
        "float": {
            "prefix": "float\tstorage type",
            "body": "float"
        },
        "integer": {
            "prefix": "integer\tstorage type",
            "body": "integer"
        },
        "key": {
            "prefix": "key\tstorage type",
            "body": "key"
        },
        "list": {
            "prefix": "list\tstorage type",
            "body": "list"
        },
        "quaternion": {
            "prefix": "quaternion\tstorage type",
            "body": "quaternion"
        },
        "rotation": {
            "prefix": "rotation\tstorage type",
            "body": "rotation"
        },
        "string": {
            "prefix": "string\tstorage type",
            "body": "string"
        },
        "vector": {
            "prefix": "vector\tstorage type",
            "body": "vector"
        },
//  events
        "at_rot_target": {
            "prefix": "at_rot_target (event)",
            "body": [
                "at_rot_target(integer ${handle}, rotation ${targetrot}, rotation ${ourrot})",
                "{",
                "    $0",
                "}"
            ]
        },
        "at_target": {
            "prefix": "at_target (event)",
            "body": [
                "at_target(integer ${tnum}, vector ${targetpos}, vector ${ourpos})",
                "{",
                "    $0",
                "}"
            ]
        },
        "attach": {
            "prefix": "attach (event)",
            "body": [
                "attach(key ${id})",
                "{",
                "    $0",
                "}"
            ]
        },
        "changed": {
            "prefix": "changed (event)",
            "body": [
                "changed(integer ${change})",
                "{",
                "    $0",
                "}"
            ]
        },
        "collision": {
            "prefix": "collision (event)",
            "body": [
                "collision(integer ${num_detected})",
                "{",
                "    $0",
                "}"
            ]
        },
        "collision_end": {
            "prefix": "collision_end (event)",
            "body": [
                "collision_end(integer ${num_detected})",
                "{",
                "    $0",
                "}"
            ]
        },
        "collision_start": {
            "prefix": "collision_start (event)",
            "body": [
                "collision_start(integer ${num_detected})",
                "{",
                "    $0",
                "}"
            ]
        },
        "control": {
            "prefix": "control (event)",
            "body": [
                "control(key ${id}, integer ${level}, integer ${edge})",
                "{",
                "    $0",
                "}"
            ]
        },
        "dataserver": {
            "prefix": "dataserver (event)",
            "body": [
                "dataserver(key ${query_id}, string ${data})",
                "{",
                "    $0",
                "}"
            ]
        },
        "email": {
            "prefix": "email (event)",
            "body": [
                "email(string ${time}, string ${address}, string ${subject}, string ${4:message}, integer ${5:num_left})",
                "{",
                "    $0",
                "}"
            ]
        },
        "experience_permissions": {
            "prefix": "experience_permissions (event)",
            "body": [
                "experience_permissions(key ${agent_id})",
                "{",
                "    $0",
                "}"
            ]
        },
        "experience_permissions_denied": {
            "prefix": "experience_permissions_denied (event)",
            "body": [
                "experience_permissions_denied(key ${agent_id}, integer ${reason})",
                "{",
                "    $0",
                "}"
            ]
        },
        "http_request": {
            "prefix": "http_request (event)",
            "body": [
                "http_request(key ${request_id}, string ${method}, string ${body})",
                "{",
                "    $0",
                "}"
            ]
        },
        "http_response": {
            "prefix": "http_response (event)",
            "body": [
                "http_response(key ${request_id}, integer ${status}, list ${metadata}, string ${4:body})",
                "{",
                "    $0",
                "}"
            ]
        },
        "land_collision": {
            "prefix": "land_collision (event)",
            "body": [
                "land_collision(vector ${pos})",
                "{",
                "    $0",
                "}"
            ]
        },
        "land_collision_end": {
            "prefix": "land_collision_end (event)",
            "body": [
                "land_collision_end(vector ${pos})",
                "{",
                "    $0",
                "}"
            ]
        },
        "land_collision_start": {
            "prefix": "land_collision_start (event)",
            "body": [
                "land_collision_start(vector ${pos})",
                "{",
                "    $0",
                "}"
            ]
        },
        "link_message": {
            "prefix": "link_message (event)",
            "body": [
                "link_message(integer ${sender_num}, integer ${num}, string ${str}, key ${4:id})",
                "{",
                "    $0",
                "}"
            ]
        },
        "listen": {
            "prefix": "listen (event)",
            "body": [
                "listen(integer ${channel}, string ${name}, key ${id}, string ${4:message})",
                "{",
                "    $0",
                "}"
            ]
        },
        "money": {
            "prefix": "money (event)",
            "body": [
                "money(key ${id}, integer ${amount})",
                "{",
                "    $0",
                "}"
            ]
        },
        "moving_end": {
            "prefix": "moving_end (event)",
            "body": [
                "moving_end()",
                "{",
                "    $0",
                "}"
            ]
        },
        "moving_start": {
            "prefix": "moving_start (event)",
            "body": [
                "moving_start()",
                "{",
                "    $0",
                "}"
            ]
        },
        "no_sensor": {
            "prefix": "no_sensor (event)",
            "body": [
                "no_sensor()",
                "{",
                "    $0",
                "}"
            ]
        },
        "not_at_rot_target": {
            "prefix": "not_at_rot_target (event)",
            "body": [
                "not_at_rot_target()",
                "{",
                "    $0",
                "}"
            ]
        },
        "not_at_target": {
            "prefix": "not_at_target (event)",
            "body": [
                "not_at_target()",
                "{",
                "    $0",
                "}"
            ]
        },
        "object_rez": {
            "prefix": "object_rez (event)",
            "body": [
                "object_rez(key ${id})",
                "{",
                "    $0",
                "}"
            ]
        },
        "on_rez": {
            "prefix": "on_rez (event)",
            "body": [
                "on_rez(integer ${start_param})",
                "{",
                "    $0",
                "}"
            ]
        },
        "path_update": {
            "prefix": "path_update (event)",
            "body": [
                "path_update(integer ${type}, list ${reserved})",
                "{",
                "    $0",
                "}"
            ]
        },
        "remote_data": {
            "prefix": "remote_data (event)",
            "body": [
                "remote_data(integer ${event_type}, key ${channel}, key ${message_id}, string ${4:sender}, integer ${5:idata}, string ${6:sdata})",
                "{",
                "    $0",
                "}"
            ]
        },
        "run_time_permissions": {
            "prefix": "run_time_permissions (event)",
            "body": [
                "run_time_permissions(integer ${perm})",
                "{",
                "    $0",
                "}"
            ]
        },
        "sensor": {
            "prefix": "sensor (event)",
            "body": [
                "sensor(integer ${num_detected})",
                "{",
                "    $0",
                "}"
            ]
        },
        "state_entry": {
            "prefix": "state_entry (event)",
            "body": [
                "state_entry()",
                "{",
                "    $0",
                "}"
            ]
        },
        "state_exit": {
            "prefix": "state_exit (event)",
            "body": [
                "state_exit()",
                "{",
                "    $0",
                "}"
            ]
        },
        "timer": {
            "prefix": "timer (event)",
            "body": [
                "timer()",
                "{",
                "    $0",
                "}"
            ]
        },
        "touch": {
            "prefix": "touch (event)",
            "body": [
                "touch(integer ${num_detected})",
                "{",
                "    $0",
                "}"
            ]
        },
        "touch_end": {
            "prefix": "touch_end (event)",
            "body": [
                "touch_end(integer ${num_detected})",
                "{",
                "    $0",
                "}"
            ]
        },
        "touch_start": {
            "prefix": "touch_start (event)",
            "body": [
                "touch_start(integer ${num_detected})",
                "{",
                "    $0",
                "}"
            ]
        },
        "transaction_result": {
            "prefix": "transaction_result (event)",
            "body": [
                "transaction_result(key ${id}, integer ${success}, string ${data})",
                "{",
                "    $0",
                "}"
            ]
        },
//  states
        "default": {
            "prefix": "default (state)",
            "body": [
                "default",
                "{",
                "    $0",
                "}"
            ]
        },
        "other": {
            "prefix": "other (state)",
            "body": [
                "state ${other}",
                "{",
                "    $0",
                "}"
            ]
        },
//  flow control
        "else": {
            "prefix": "else (flow control)",
            "body": [
                "else",
                "{",
                "    $0",
                "}"
            ]
        },
        "do": {
            "prefix": "do (flow control)",
            "body": [
                "do",
                "{",
                "    $0",
                "}",
                "while (${condition});"
            ]
        },
        "if": {
            "prefix": "if (flow control)",
            "body": [
                "if (${condition})",
                "{",
                "    $0",
                "}"
            ]
        },
        "for": {
            "prefix": "for (flow control)",
            "body": [
                "for (${start}; ${condition}; ${step})",
                "{",
                "    $0",
                "}"
            ]
        },
        "jump": {
            "prefix": "jump (flow control)",
            "body": "jump ${target};"
        },
        "return": {
            "prefix": "return (flow control)",
            "body": "return ${value};"
        },
        "while": {
            "prefix": "while (flow control)",
            "body": [
                "while (${condition})",
                "{",
                "    $0",
                "}"
            ]
        }
    }
}
